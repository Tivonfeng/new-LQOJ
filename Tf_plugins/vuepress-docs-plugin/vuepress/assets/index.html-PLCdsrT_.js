import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as p}from"./app-CeA3Z9s4.js";const e={};function l(o,s){return p(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="第5章-基本数据类型-🧱" tabindex="-1"><a class="header-anchor" href="#第5章-基本数据类型-🧱"><span>第5章：基本数据类型 🧱</span></a></h1><h2 id="🗺️-学习地图" tabindex="-1"><a class="header-anchor" href="#🗺️-学习地图"><span>🗺️ 学习地图</span></a></h2><p><strong>【你的学习进度】</strong><br> ✅ 第1章：初识C++<br> ✅ 第2章：C++的输出cout<br> ✅ 第3章：C++的变量<br> ✅ 第4章：C++的输入cin<br> 👉 第5章：基本数据类型【你在这里】<br> ⬜ 后续章节...</p><h2 id="🌈-数据类型的世界" tabindex="-1"><a class="header-anchor" href="#🌈-数据类型的世界"><span>🌈 数据类型的世界</span></a></h2><p><strong>【故事开始】</strong> 小明想要设计一个校园管理系统，记录学生的各种信息：姓名、年龄、身高、成绩和是否交作业等。但他很困惑，应该如何正确存储这些不同种类的数据？老师告诉他，C++提供了不同的&quot;数据类型&quot;，就像不同种类的容器，专门用来存放特定类型的数据。今天，我们和小明一起探索这些神奇的数据类型！</p><p>在C++中，数据类型就像是不同种类的容器，每种容器都专门用来存放特定类型的数据。就像你不会把水倒进装沙子的桶里一样，每种数据都需要放在适合它的容器中。</p><p>![不同的数据类型就像专门设计的容器]</p><p><strong>【快速检查】</strong> 为什么我们需要不同的数据类型？ A. 只是为了让程序看起来更复杂 B. 因为不同的数据需要不同的存储方式和操作方法 C. 计算机喜欢多样性 D. 不同的数据类型占用相同的内存空间</p><p>(思考一下再看答案...答案是B)</p><h2 id="🔢-整数类型" tabindex="-1"><a class="header-anchor" href="#🔢-整数类型"><span>🔢 整数类型</span></a></h2><p>整数类型用于存储没有小数部分的数字，比如1、42、-10等。</p><p>C++提供了几种不同大小的整数类型：</p><table><thead><tr><th>类型</th><th>大小</th><th>范围（大约）</th><th>用途</th></tr></thead><tbody><tr><td><code>int</code></td><td>4字节</td><td>-21亿到+21亿</td><td>最常用的整数类型</td></tr><tr><td><code>short</code></td><td>2字节</td><td>-32,768到+32,767</td><td>节省内存的小整数</td></tr><tr><td><code>long</code></td><td>至少4字节</td><td>与int相同或更大</td><td>大整数</td></tr><tr><td><code>long long</code></td><td>8字节</td><td>非常大的范围</td><td>超大整数</td></tr></tbody></table><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>                  <span class="token comment">// 年龄</span></span>
<span class="line">    <span class="token keyword">short</span> classNumber <span class="token operator">=</span> <span class="token number">305</span><span class="token punctuation">;</span>       <span class="token comment">// 班级编号</span></span>
<span class="line">    <span class="token keyword">long</span> populationOfChina <span class="token operator">=</span> <span class="token number">1400000000</span><span class="token punctuation">;</span>  <span class="token comment">// 中国人口（约14亿）</span></span>
<span class="line">    <span class="token keyword">long</span> <span class="token keyword">long</span> distanceToStar <span class="token operator">=</span> <span class="token number">9460730472580800</span><span class="token punctuation">;</span>  <span class="token comment">// 一光年的距离（米）</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我今年 &quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 岁&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我在 &quot;</span> <span class="token operator">&lt;&lt;</span> classNumber <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 班&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;中国大约有 &quot;</span> <span class="token operator">&lt;&lt;</span> populationOfChina <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 人&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;最近的恒星距离地球约 &quot;</span> <span class="token operator">&lt;&lt;</span> distanceToStar <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 米&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【真实场景】</strong> 整数类型在游戏开发中广泛应用。例如：</p><ul><li>玩家的生命值：<code>int health = 100;</code></li><li>收集的金币数：<code>int coins = 0;</code></li><li>游戏关卡：<code>short level = 1;</code></li><li>游戏总分：<code>long long totalScore = 0;</code></li></ul><p><strong>【记忆助手】</strong> 记住整数类型的大小关系： &quot;short小巧整数型，int是最常使用， long比它容量大，long long最庞大。&quot;</p><h2 id="🔍-无符号整数" tabindex="-1"><a class="header-anchor" href="#🔍-无符号整数"><span>🔍 无符号整数</span></a></h2><p>如果你确定一个数字永远不会是负数（比如年龄、数量等），可以使用无符号整数类型，它们的范围从0开始，但上限更高：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> studentsCount <span class="token operator">=</span> <span class="token number">1500</span><span class="token punctuation">;</span>    <span class="token comment">// 学生数量</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> itemsInBag <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>       <span class="token comment">// 背包中的物品数量</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;学校有 &quot;</span> <span class="token operator">&lt;&lt;</span> studentsCount <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 名学生&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;背包中有 &quot;</span> <span class="token operator">&lt;&lt;</span> itemsInBag <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 件物品&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【编程思维】</strong> 何时使用无符号整数：</p><ol><li>当你确定数值永远不会为负数时（如数量、计数器等）</li><li>当你需要表示比普通int更大的正整数时</li><li>当你处理位运算时（如网络编程、加密算法等）</li></ol><p><strong>【常见错误】</strong></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">unsigned</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">count <span class="token operator">=</span> count <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">;</span>  <span class="token comment">// 危险！将产生一个非常大的数，而不是-5</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> count <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">// 可能输出4294967291（根据系统可能有所不同）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🌊-浮点类型-小数" tabindex="-1"><a class="header-anchor" href="#🌊-浮点类型-小数"><span>🌊 浮点类型（小数）</span></a></h2><p>浮点类型用于存储带小数部分的数字，如3.14、-0.5等：</p><table><thead><tr><th>类型</th><th>大小</th><th>精度</th><th>用途</th></tr></thead><tbody><tr><td><code>float</code></td><td>4字节</td><td>7位数字</td><td>单精度浮点数</td></tr><tr><td><code>double</code></td><td>8字节</td><td>15位数字</td><td>双精度浮点数（更精确）</td></tr></tbody></table><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">float</span> height <span class="token operator">=</span> <span class="token number">1.75</span><span class="token punctuation">;</span>           <span class="token comment">// 身高（米）</span></span>
<span class="line">    <span class="token keyword">double</span> pi <span class="token operator">=</span> <span class="token number">3.14159265359</span><span class="token punctuation">;</span>     <span class="token comment">// 圆周率（更精确）</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我的身高是 &quot;</span> <span class="token operator">&lt;&lt;</span> height <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 米&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;圆周率精确到11位小数是 &quot;</span> <span class="token operator">&lt;&lt;</span> pi <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 科学计数法</span></span>
<span class="line">    <span class="token keyword">double</span> speedOfLight <span class="token operator">=</span> <span class="token number">3.0e8</span><span class="token punctuation">;</span>   <span class="token comment">// 3.0 × 10^8，光速（米/秒）</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;光速约为 &quot;</span> <span class="token operator">&lt;&lt;</span> speedOfLight <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 米/秒&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【数学连接】</strong> 浮点数与科学记数法紧密相关。例如，<code>3.0e8</code>表示3.0×10^8（300,000,000）。这种表示法特别适合表示非常大或非常小的数字，就像你在物理课上学到的那样。</p><p><strong>【真实场景】</strong> 科学计算和金融软件大量使用浮点数：</p><ul><li>物理模拟：<code>double gravity = 9.8;</code> （重力加速度）</li><li>银行系统：<code>double accountBalance = 1234.56;</code> （账户余额）</li><li>游戏物理：<code>float playerSpeed = 7.5;</code> （玩家移动速度）</li></ul><p><strong>【快速检查】</strong> 以下哪个场景应该使用浮点类型？ A. 存储学生的年龄 B. 记录班级总人数 C. 计算圆的面积 D. 存储游戏关卡编号</p><p>(思考一下再看答案...答案是C，因为圆的面积π×r²可能有小数部分)</p><h2 id="🔤-字符类型" tabindex="-1"><a class="header-anchor" href="#🔤-字符类型"><span>🔤 字符类型</span></a></h2><p>字符类型<code>char</code>用于存储单个字符，如字母、数字或符号：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">char</span> grade <span class="token operator">=</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">;</span>          <span class="token comment">// 成绩等级</span></span>
<span class="line">    <span class="token keyword">char</span> initial <span class="token operator">=</span> <span class="token char">&#39;M&#39;</span><span class="token punctuation">;</span>        <span class="token comment">// 名字首字母</span></span>
<span class="line">    <span class="token keyword">char</span> symbol <span class="token operator">=</span> <span class="token char">&#39;@&#39;</span><span class="token punctuation">;</span>         <span class="token comment">// 符号</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我的成绩是 &quot;</span> <span class="token operator">&lt;&lt;</span> grade <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我的名字以 &quot;</span> <span class="token operator">&lt;&lt;</span> initial <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 开头&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;电子邮件中常用的符号是 &quot;</span> <span class="token operator">&lt;&lt;</span> symbol <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 字符实际上是以数字形式存储的（ASCII码）</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;字符 &#39;A&#39; 的ASCII码是 &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>grade <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 我们也可以用ASCII码来表示字符</span></span>
<span class="line">    <span class="token keyword">char</span> smiley <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 在某些系统上可能显示为笑脸</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;笑脸符号：&quot;</span> <span class="token operator">&lt;&lt;</span> smiley <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【有趣知识】</strong> ASCII码表 ASCII（美国信息交换标准代码）是一种字符编码标准，将字符映射到数字：</p><ul><li>&#39;A&#39; 到 &#39;Z&#39; 对应 65 到 90</li><li>&#39;a&#39; 到 &#39;z&#39; 对应 97 到 122</li><li>&#39;0&#39; 到 &#39;9&#39; 对应 48 到 57</li></ul><p>这就是为什么计算机能够对字符进行排序和比较的原因！</p><p><strong>【编程最佳实践】</strong> 记住字符使用单引号（&#39;A&#39;），而字符串使用双引号（&quot;Hello&quot;）。混淆这两种引号是初学者常见的错误。</p><h2 id="📏-布尔类型" tabindex="-1"><a class="header-anchor" href="#📏-布尔类型"><span>📏 布尔类型</span></a></h2><p>布尔类型<code>bool</code>只有两个可能的值：<code>true</code>（真）或<code>false</code>（假），用于表示逻辑状态：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">bool</span> isRaining <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>         <span class="token comment">// 是否在下雨</span></span>
<span class="line">    <span class="token keyword">bool</span> hasFinishedHomework <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// 是否完成了作业</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;现在是否在下雨？ &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>isRaining <span class="token operator">?</span> <span class="token string">&quot;是&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;否&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;作业完成了吗？ &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>hasFinishedHomework <span class="token operator">?</span> <span class="token string">&quot;是&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;否&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 布尔值在输出时默认显示为0（假）或1（真）</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;isRaining的值是 &quot;</span> <span class="token operator">&lt;&lt;</span> isRaining <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 我们可以使用boolalpha操纵符来显示&quot;true&quot;或&quot;false&quot;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> boolalpha<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;hasFinishedHomework的值是 &quot;</span> <span class="token operator">&lt;&lt;</span> hasFinishedHomework <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【生活类比】</strong> 布尔类型就像是灯的开关，只有两种状态：开（true）或关（false）。它们非常适合表示&quot;是/否&quot;、&quot;开/关&quot;、&quot;真/假&quot;这样的二元状态。</p><p><strong>【真实场景】</strong> 布尔值在程序逻辑控制中无处不在：</p><ul><li>用户登录状态：<code>bool isLoggedIn = false;</code></li><li>游戏设置：<code>bool soundEnabled = true;</code></li><li>表单验证：<code>bool isValidEmail = false;</code></li></ul><h2 id="📝-字符串类型" tabindex="-1"><a class="header-anchor" href="#📝-字符串类型"><span>📝 字符串类型</span></a></h2><p>字符串类型<code>string</code>用于存储文本，如名字、句子等：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;小明&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    string greeting <span class="token operator">=</span> <span class="token string">&quot;你好，世界！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    string sentence <span class="token operator">=</span> <span class="token string">&quot;C++编程很有趣！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;说：\\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> greeting <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> sentence <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 字符串连接</span></span>
<span class="line">    string fullGreeting <span class="token operator">=</span> greeting <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;很高兴认识你！&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> fullGreeting <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取字符串长度</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;句子\\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> sentence <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\&quot;的长度是 &quot;</span> <span class="token operator">&lt;&lt;</span> sentence<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 个字符&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【字符串操作速查表】</strong></p><table><thead><tr><th>操作</th><th>代码示例</th><th>说明</th></tr></thead><tbody><tr><td>连接</td><td><code>string result = str1 + str2;</code></td><td>将两个字符串合并</td></tr><tr><td>获取长度</td><td><code>int len = str.length();</code></td><td>计算字符串中的字符数</td></tr><tr><td>访问字符</td><td><code>char first = str[0];</code></td><td>获取特定位置的字符（从0开始）</td></tr><tr><td>子字符串</td><td><code>string sub = str.substr(0, 3);</code></td><td>提取部分字符串</td></tr><tr><td>查找</td><td><code>int pos = str.find(&quot;hello&quot;);</code></td><td>查找子字符串的位置</td></tr></tbody></table><p><strong>【编程最佳实践】</strong> 使用字符串时，记得包含正确的头文件（通常是<code>&lt;string&gt;</code>或者使用<code>&lt;bits/stdc++.h&gt;</code>），并且使用<code>std::string</code>或在文件开头添加<code>using namespace std;</code>。</p><h2 id="🔄-类型转换" tabindex="-1"><a class="header-anchor" href="#🔄-类型转换"><span>🔄 类型转换</span></a></h2><p>有时候，我们需要将一种类型的数据转换为另一种类型：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 隐式转换（自动进行）</span></span>
<span class="line">    <span class="token keyword">int</span> intValue <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">double</span> doubleValue <span class="token operator">=</span> intValue<span class="token punctuation">;</span>  <span class="token comment">// int转换为double</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int值 &quot;</span> <span class="token operator">&lt;&lt;</span> intValue <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 转换为double后是 &quot;</span> <span class="token operator">&lt;&lt;</span> doubleValue <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 显式转换（强制进行）</span></span>
<span class="line">    <span class="token keyword">double</span> piValue <span class="token operator">=</span> <span class="token number">3.14159</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> roundedPi <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>piValue<span class="token punctuation">;</span>  <span class="token comment">// double转换为int（小数部分被截断）</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;double值 &quot;</span> <span class="token operator">&lt;&lt;</span> piValue <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 转换为int后是 &quot;</span> <span class="token operator">&lt;&lt;</span> roundedPi <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 数字转字符串</span></span>
<span class="line">    <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">95</span><span class="token punctuation">;</span></span>
<span class="line">    string scoreText <span class="token operator">=</span> <span class="token function">to_string</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;数字 &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 转换为字符串后是 \\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> scoreText <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 字符串转数字</span></span>
<span class="line">    string numberText <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> parsedNumber <span class="token operator">=</span> <span class="token function">stoi</span><span class="token punctuation">(</span>numberText<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// string to int</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;字符串 \\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> numberText <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\&quot; 转换为int后是 &quot;</span> <span class="token operator">&lt;&lt;</span> parsedNumber <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【类型转换注意事项】</strong></p><ol><li><strong>隐式转换</strong>：自动发生，但可能导致精度损失</li><li><strong>显式转换</strong>：手动指定，你需要对结果负责</li><li><strong>向上转换</strong>：小类型到大类型（如int→double），通常安全</li><li><strong>向下转换</strong>：大类型到小类型（如double→int），可能丢失信息</li></ol><p><strong>【常见错误】</strong></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token comment">// 错误1：字符串转数字失败</span></span>
<span class="line">string notANumber <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token function">stoi</span><span class="token punctuation">(</span>notANumber<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 运行时错误！</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 错误2：丢失小数部分</span></span>
<span class="line"><span class="token keyword">double</span> price <span class="token operator">=</span> <span class="token number">19.99</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> dollars <span class="token operator">=</span> price<span class="token punctuation">;</span>  <span class="token comment">// dollars将是19，而不是20</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【真实场景】</strong> 类型转换在处理用户输入时非常常见：</p><ul><li>将输入的字符串转换为数字进行计算</li><li>将计算结果转换为字符串进行显示</li><li>在金融应用中，将小数金额转换为整数分进行处理</li></ul><h2 id="⚠️-数据类型的范围和溢出" tabindex="-1"><a class="header-anchor" href="#⚠️-数据类型的范围和溢出"><span>⚠️ 数据类型的范围和溢出</span></a></h2><p>每种数据类型都有其存储范围。如果尝试存储超出范围的值，就会发生溢出：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int类型的最大值是：&quot;</span> <span class="token operator">&lt;&lt;</span> INT_MAX <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;int类型的最小值是：&quot;</span> <span class="token operator">&lt;&lt;</span> INT_MIN <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 溢出示例</span></span>
<span class="line">    <span class="token keyword">int</span> maxInt <span class="token operator">=</span> INT_MAX<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;最大int值：&quot;</span> <span class="token operator">&lt;&lt;</span> maxInt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;最大int值 + 1 = &quot;</span> <span class="token operator">&lt;&lt;</span> maxInt <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">// 溢出，变成最小的负数</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【生活类比】</strong> 数据类型的范围就像汽车的里程表。当达到最大值后，它会&quot;环绕&quot;回起点。例如，如果里程表最多显示999,999公里，再多开1公里就会变成000,000，而不是1,000,000。</p><p><strong>【编程最佳实践】</strong> 在处理可能超出类型范围的值时：</p><ol><li>选择足够大的数据类型</li><li>添加范围检查代码</li><li>使用专门的库来处理超大数字（如C++的<code>&lt;boost/multiprecision&gt;</code>）</li></ol><h2 id="🎮-动手实践" tabindex="-1"><a class="header-anchor" href="#🎮-动手实践"><span>🎮 动手实践</span></a></h2><p>编程最好的学习方式就是动手做！试试下面的小任务：</p><p><strong>【基础练习】</strong> 🌟</p><ol><li>创建一个程序，使用不同的数据类型存储你的个人信息（年龄、身高、体重、成绩等），并漂亮地输出这些信息</li></ol><p><strong>【进阶练习】</strong> 🌟🌟 2. 编写一个温度转换程序，将摄氏度转换为华氏度（公式：F = C * 9/5 + 32），并确保结果保留两位小数</p><p><strong>【挑战练习】</strong> 🌟🌟🌟 3. 创建一个银行余额计算器，使用适当的数据类型存储账户余额，允许用户存款和取款，并确保余额永远不会出现精度问题（提示：考虑使用整数存储&quot;分&quot;而不是小数存储&quot;元&quot;）</p><h2 id="🧠-思考题" tabindex="-1"><a class="header-anchor" href="#🧠-思考题"><span>🧠 思考题</span></a></h2><ol><li>如果你要存储一个人的年龄，应该使用什么数据类型？为什么？</li><li><code>float</code>和<code>double</code>有什么区别？什么时候应该使用<code>float</code>，什么时候应该使用<code>double</code>？</li><li>如果你将一个<code>double</code>类型的值赋给一个<code>int</code>类型的变量，会发生什么？</li></ol><p><strong>【提示】</strong> 思考题3的答案：小数部分会被截断（而不是四舍五入），只保留整数部分。例如，<code>double d = 3.14; int i = d;</code> 会使i的值为3。</p><h2 id="🎯-挑战任务" tabindex="-1"><a class="header-anchor" href="#🎯-挑战任务"><span>🎯 挑战任务</span></a></h2><p><strong>【迷你项目：学生信息管理系统】</strong> 创建一个学生信息管理程序，让用户输入学生的姓名、年龄、身高、体重和三门课程的成绩，然后计算并显示平均成绩，并判断学生是否及格（平均分≥60）。确保选择合适的数据类型来存储不同的信息！</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 声明变量，选择合适的数据类型</span></span>
<span class="line">    string name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> height<span class="token punctuation">,</span> weight<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> score1<span class="token punctuation">,</span> score2<span class="token punctuation">,</span> score3<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取用户输入</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== 学生信息管理系统 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入学生姓名：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入学生年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入学生身高（米）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> height<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入学生体重（千克）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> weight<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入第一门课的成绩：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> score1<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入第二门课的成绩：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> score2<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入第三门课的成绩：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> score3<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 计算平均成绩</span></span>
<span class="line">    <span class="token keyword">float</span> averageScore <span class="token operator">=</span> <span class="token punctuation">(</span>score1 <span class="token operator">+</span> score2 <span class="token operator">+</span> score3<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3.0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 判断是否及格</span></span>
<span class="line">    <span class="token keyword">bool</span> isPassed <span class="token operator">=</span> averageScore <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 显示学生信息</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n===== 学生信息 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;姓名：&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;年龄：&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;岁&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;身高：&quot;</span> <span class="token operator">&lt;&lt;</span> height <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;米&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;体重：&quot;</span> <span class="token operator">&lt;&lt;</span> weight <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;千克&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;BMI指数：&quot;</span> <span class="token operator">&lt;&lt;</span> weight <span class="token operator">/</span> <span class="token punctuation">(</span>height <span class="token operator">*</span> height<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;三门课成绩：&quot;</span> <span class="token operator">&lt;&lt;</span> score1 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> score2 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">&lt;&lt;</span> score3 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;平均成绩：&quot;</span> <span class="token operator">&lt;&lt;</span> fixed <span class="token operator">&lt;&lt;</span> <span class="token function">setprecision</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> averageScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;是否及格：&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>isPassed <span class="token operator">?</span> <span class="token string">&quot;是&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;否&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【真实应用】</strong> 学校的学生管理系统就是基于类似的原理构建的。这种系统需要处理各种不同类型的数据：文本（姓名、地址）、数字（成绩、年龄）、逻辑值（是否注册、是否缴费）等。合理选择数据类型可以让系统更高效、更可靠。</p><h2 id="📚-小结" tabindex="-1"><a class="header-anchor" href="#📚-小结"><span>📚 小结</span></a></h2><p>恭喜你完成了第五章！现在你已经：</p><ul><li>🌟 了解了C++中的基本数据类型</li><li>🌟 学会了如何选择适合特定数据的类型</li><li>🌟 掌握了类型转换的方法</li><li>🌟 了解了数据类型的范围和溢出问题</li><li>🌟 学会了在实际应用中选择合适的数据类型</li></ul><p><strong>【下章预告】</strong> 在下一章中，我们将学习如何使用条件语句让程序做出决策！想象一下，你的程序可以根据不同的情况做出不同的反应，就像一个有思考能力的助手。这将使你的程序变得更加智能和实用！</p>`,84)])])}const r=n(e,[["render",l]]),u=JSON.parse('{"path":"/docs/csp/csp_level1/csp_05_Basic_Data_Types/","title":"第5章：基本数据类型 🧱","lang":"zh-CN","frontmatter":{},"git":{"createdTime":1741319126000,"updatedTime":1742131209000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":3,"url":"https://github.com/Tivonfeng"}]},"readingTime":{"minutes":11.67,"words":3502},"filePathRelative":"docs/csp/csp_level1/csp_05_Basic_Data_Types/index.md","excerpt":"\\n<h2>🗺️ 学习地图</h2>\\n<p><strong>【你的学习进度】</strong><br>\\n✅ 第1章：初识C++<br>\\n✅ 第2章：C++的输出cout<br>\\n✅ 第3章：C++的变量<br>\\n✅ 第4章：C++的输入cin<br>\\n👉 第5章：基本数据类型【你在这里】<br>\\n⬜ 后续章节...</p>\\n<h2>🌈 数据类型的世界</h2>\\n<p><strong>【故事开始】</strong>\\n小明想要设计一个校园管理系统，记录学生的各种信息：姓名、年龄、身高、成绩和是否交作业等。但他很困惑，应该如何正确存储这些不同种类的数据？老师告诉他，C++提供了不同的\\"数据类型\\"，就像不同种类的容器，专门用来存放特定类型的数据。今天，我们和小明一起探索这些神奇的数据类型！</p>"}');export{r as comp,u as data};
