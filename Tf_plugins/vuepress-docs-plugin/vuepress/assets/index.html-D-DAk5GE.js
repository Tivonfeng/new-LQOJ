import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as s,d as r,e as o,w as e,r as u,o as d,f as n}from"./app-By3Qqt_-.js";const k="/docs/assets/image-CoP3xyuT.png",m="/docs/assets/image1-CrvQU6lV.png",b={},v={class:"hint-container tip"};function h(y,a){const i=u("Tabs");return d(),c("div",null,[a[10]||(a[10]=s("h1",{id:"流程控制语句-分支",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#流程控制语句-分支"},[s("span",null,"流程控制语句 | 分支")])],-1)),s("div",v,[a[2]||(a[2]=s("p",{class:"hint-container-title"},"本节课概要",-1)),a[3]||(a[3]=s("p",null,"学习Python中输出语句、格式化输出以及如何给数据限制宽度",-1)),o(i,{data:[{id:"知识点"}]},{title0:e(({value:t,isActive:l})=>[...a[0]||(a[0]=[n("知识点",-1)])]),tab0:e(({value:t,isActive:l})=>[...a[1]||(a[1]=[s("ul",{class:"task-list-container"},[s("li",{class:"task-list-item"},[s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-0",checked:"checked",disabled:"disabled"}),s("label",{class:"task-list-item-label",for:"task-item-0"},[n(" 认识并掌握 "),s("strong",null,"输出语句")])]),s("li",{class:"task-list-item"},[s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-1",checked:"checked",disabled:"disabled"}),s("label",{class:"task-list-item-label",for:"task-item-1"},[n(" 认识并掌握 "),s("strong",null,"4种格式化输出方式")])]),s("li",{class:"task-list-item"},[s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-2",checked:"checked",disabled:"disabled"}),s("label",{class:"task-list-item-label",for:"task-item-2"},[n(" 认识并掌握 "),s("strong",null,"3种类型数据限宽的方法")])])],-1),s("p",null,":::",-1)])]),_:1})]),a[11]||(a[11]=r('<div class="hint-container important"><p class="hint-container-title">训练题单</p><p><a href="https://noj.lqcode.fun/d/python/training/6569a9f3521bf1805c758f60" target="_blank" rel="noopener noreferrer">点我进入本节课训练题单</a></p></div><h2 id="〽️-什么是python中的流程控制结构" tabindex="-1"><a class="header-anchor" href="#〽️-什么是python中的流程控制结构"><span>〽️ 什么是Python中的流程控制结构</span></a></h2><p>Python中的流程控制总共有三种流程：顺序结构、分支结构（判断结构）、循环结构，在编程是最最最基础的结构就是顺序结构，他就是从上往下依次执行代码，所以只要你写了代码，他必然就是顺序结构。</p><p>那么在顺序结构的基础上，会拓展出两种结构：分支结构和循环结构。 <img src="'+k+`" alt="Alt text" loading="lazy"></p><h2 id="〽️-顺序结构-略" tabindex="-1"><a class="header-anchor" href="#〽️-顺序结构-略"><span>〽️ 顺序结构（略）</span></a></h2><h2 id="〽️-分支结构的语法格式-举例" tabindex="-1"><a class="header-anchor" href="#〽️-分支结构的语法格式-举例"><span>〽️ 分支结构的语法格式&amp;举例</span></a></h2><h3 id="🎈-缩进" tabindex="-1"><a class="header-anchor" href="#🎈-缩进"><span>🎈 缩进</span></a></h3><p>任何一种编程语言都有各自的语法和编程规范，Python 之所以以‘优雅，简单’著称，其中一个最重要的原因，就是它的“缩进”。大部分的编程语言都是使用“{}”来表示一个语句块或者代码段，而 Python 用缩进层次来组织代码块，而约定一个缩进是用‘4个空格’来表示，请务必遵守约定俗成的习惯，坚持使用4个空格的缩进。 如果是用文本编辑器或者 IDE，可以把 Tab 自动转换为4个空格，然后用 tab 键来使用缩进，确保不混用 Tab 和空格。 缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;neo&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;smile&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+`" alt="Alt text" loading="lazy"> 以下代码将会执行错误：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;neo&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;smile&quot;</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;it&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此，在 Python 的代码块中必须使用相同数目的行首缩进空格数。</p><h3 id="🎈-python-空格和空行" tabindex="-1"><a class="header-anchor" href="#🎈-python-空格和空行"><span>🎈 Python 空格和空行</span></a></h3><p>在 Python 中，为了让代码看起来更清晰，具有更好的可读性，有时会在代码中太内疚空格和空行。空格或者空行与代码缩进不同，并不是 Python 语法的一部分。 书写时不插入空格或者空行，Python 解释器运行也不会出错。但是空格或者空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。</p><blockquote><p>空格和空行是为了增加代码可读性。</p></blockquote><h3 id="🎈-什么是分支结构" tabindex="-1"><a class="header-anchor" href="#🎈-什么是分支结构"><span>🎈 什么是分支结构</span></a></h3><p>根据某一个条件，来决定接下来要执行的动作</p><h3 id="🎈-三种分支结构" tabindex="-1"><a class="header-anchor" href="#🎈-三种分支结构"><span>🎈 三种分支结构</span></a></h3>`,18)),o(i,{data:[{id:"单条件分支结构"},{id:"多条件分支结构"},{id:"分支嵌套结构"}]},{title0:e(({value:t,isActive:l})=>[...a[4]||(a[4]=[n("单条件分支结构",-1)])]),title1:e(({value:t,isActive:l})=>[...a[5]||(a[5]=[n("多条件分支结构",-1)])]),title2:e(({value:t,isActive:l})=>[...a[6]||(a[6]=[n("分支嵌套结构",-1)])]),tab0:e(({value:t,isActive:l})=>[...a[7]||(a[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py"},[s("pre",null,[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("条件"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token comment"},"# ⚠️ else后面是没有条件的，表示if不成立的所有情况")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"},"      "),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 判断是否满足18岁，才能进入网吧")]),n(`
`),s("span",{class:"line"},[n("age "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"18")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("age "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"18"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"可以进入网吧"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"不可以进入网吧"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:t,isActive:l})=>[...a[8]||(a[8]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py"},[s("pre",null,[s("code",{class:"language-python"},[s("span",{class:"line"},[s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("条件"),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"elif"),n(),s("span",{class:"token punctuation"},"("),n("条件"),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"elif"),n(),s("span",{class:"token punctuation"},"("),n("条件"),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token comment"},"#⚠️ else后面是没有条件的，表示if和elif不成立的所有情况")]),n(`
`),s("span",{class:"line"},"    代码块"),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 根据学生成绩来输出等级")]),n(`
`),s("span",{class:"line"},[n("score "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"60")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("score "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"90"),n(),s("span",{class:"token keyword"},"and"),n(" score "),s("span",{class:"token operator"},"<="),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"优秀"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"elif"),n(),s("span",{class:"token punctuation"},"("),n("score "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"80"),n(),s("span",{class:"token keyword"},"and"),n(" score "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"90"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"良好"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"elif"),n(),s("span",{class:"token punctuation"},"("),n("score "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"70"),n(),s("span",{class:"token keyword"},"and"),n(" score "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"80"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"中等"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"elif"),n(),s("span",{class:"token punctuation"},"("),n("score "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"60"),n(),s("span",{class:"token keyword"},"and"),n(" score "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"70"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"及格"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},":")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"不及格"'),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])]),tab2:e(({value:t,isActive:l})=>[...a[9]||(a[9]=[s("p",null,null,-1)])]),_:1}),a[12]||(a[12]=s("h3",{id:"关于python中的代码缩进",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#关于python中的代码缩进"},[s("span",null,"关于python中的代码缩进")])],-1)),a[13]||(a[13]=s("p",null,"Python中通过代码的缩进来区分代码块，一个缩进默认是4个空格",-1))])}const w=p(b,[["render",h]]),x=JSON.parse('{"path":"/docs/python/python_level2/python_01_structure/python_01_control_if/","title":"流程控制语句 | 分支","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"git":{"createdTime":1698335100000,"updatedTime":1719199244000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":10,"url":"https://github.com/Tivonfeng"},{"name":"Tivon feng","username":"","email":"tivonfeng@gmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":910},"filePathRelative":"docs/python/python_level2/python_01_structure/python_01_control_if/index.md"}');export{w as comp,x as data};
