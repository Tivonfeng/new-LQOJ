import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as p,a as u,e as c,w as e,r as d,o as k,b as s,f as n}from"./app-By3Qqt_-.js";const m={};function v(b,a){const o=d("CodeTabs");return k(),r("div",null,[a[36]||(a[36]=p('<h1 id="第3章-c-的变量-📦" tabindex="-1"><a class="header-anchor" href="#第3章-c-的变量-📦"><span>第3章：C++的变量 📦</span></a></h1><div class="hint-container tip"><p class="hint-container-title">章节导航</p><p><strong>【你的学习进度】</strong><br> ✅ 第1章：初识C++<br> ✅ 第2章：C++的输出cout<br> 👉 <strong>第3章：C++的变量【你在这里】</strong><br> ⬜ 第4章：C++的输入cin<br> ⬜ 第5章：基本数据类型<br> ⬜ 后续章节...</p></div><h2 id="🧸-什么是变量" tabindex="-1"><a class="header-anchor" href="#🧸-什么是变量"><span>🧸 什么是变量？</span></a></h2><div class="hint-container info"><p class="hint-container-title">学习目标</p><p>在本章结束后，你将能够：</p><ul><li>理解变量的概念和重要性</li><li>创建和使用不同类型的变量</li><li>掌握变量命名的规则和最佳实践</li><li>对变量进行各种运算操作</li></ul></div><details class="hint-container details"><summary>【故事开始】</summary><p>小明想制作一个简单的游戏，记录玩家的分数、血量和等级。但他发现每次数据变化时，都要修改代码中的具体数字，太麻烦了！老师告诉他可以使用&quot;变量&quot;来解决这个问题。变量就像是带标签的魔法盒子，可以存放会变化的数据。让我们和小明一起学习变量的魔法吧！</p></details><div style="text-align:center;"><p>想象一下，变量就像是一个带标签的盒子，你可以在里面存放各种东西，比如数字、文字或其他信息。每当你需要使用这些信息时，只需要通过盒子的标签（变量名）就能找到它们！</p></div>',6)),u(` 图片暂时注释掉，等有图片资源再添加 
![变量就像是带标签的盒子，可以存放不同类型的数据](/assets/images/variable-box.png) 
`),a[37]||(a[37]=p(`<div class="hint-container warning"><p class="hint-container-title">重要概念</p><p>在编程中，<strong>变量</strong>让我们能够存储和管理数据，这样我们就可以在程序的不同部分使用这些数据。</p></div><div class="hint-container tip"><p class="hint-container-title">快速检查</p><p>变量的主要作用是什么？</p><ul><li>A. 计算数学公式</li><li>B. 输出信息到屏幕</li><li>C. 存储和管理数据</li><li>D. 连接到互联网</li></ul><details><summary>查看答案</summary><p>答案是 <strong>C. 存储和管理数据</strong></p></details></div><h2 id="📝-如何创建变量" tabindex="-1"><a class="header-anchor" href="#📝-如何创建变量"><span>📝 如何创建变量</span></a></h2><p>在C++中创建变量非常简单，你需要指定两件事：</p><ol><li>变量的<strong>类型</strong>（你要存放什么类型的数据）</li><li>变量的<strong>名字</strong>（你给这个盒子贴什么标签）</li></ol><div class="hint-container info"><p class="hint-container-title">变量声明语法</p><p>基本语法是：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line">类型 变量名<span class="token punctuation">;</span>          <span class="token comment">// 声明变量</span></span>
<span class="line">类型 变量名 <span class="token operator">=</span> 初始值<span class="token punctuation">;</span>  <span class="token comment">// 声明并初始化变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,6)),c(o,{data:[{id:"基本变量示例"},{id:"输出结果"}]},{title0:e(({value:l,isActive:t})=>[...a[0]||(a[0]=[n("基本变量示例",-1)])]),title1:e(({value:l,isActive:t})=>[...a[1]||(a[1]=[n("输出结果",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[2]||(a[2]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 创建一个整数变量")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" age "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"12"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 创建一个小数变量")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" height "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"1.58"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 创建一个字符变量")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"char"),n(" grade "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token char"},"'A'"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 创建一个字符串变量")]),n(`
`),s("span",{class:"line"},[n("    string name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"小明"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 输出这些变量")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"姓名："'),n(),s("span",{class:"token operator"},"<<"),n(" name "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"年龄："'),n(),s("span",{class:"token operator"},"<<"),n(" age "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"岁"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"身高："'),n(),s("span",{class:"token operator"},"<<"),n(" height "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"米"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"成绩："'),n(),s("span",{class:"token operator"},"<<"),n(" grade "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[3]||(a[3]=[s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text"},[s("pre",null,[s("code",{class:"language-text"},[s("span",{class:"line"},"姓名：小明"),n(`
`),s("span",{class:"line"},"年龄：12岁"),n(`
`),s("span",{class:"line"},"身高：1.58米"),n(`
`),s("span",{class:"line"},"成绩：A"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[38]||(a[38]=p('<div class="hint-container note"><p class="hint-container-title">编程思维</p><p>定义变量的步骤：</p><ol><li>决定你需要存储什么类型的数据</li><li>为这个数据选择一个有意义的名字</li><li>使用正确的语法声明变量</li><li>(可选) 给变量赋初始值</li></ol></div><div class="hint-container caution"><p class="hint-container-title">常见错误</p><ol><li><p>使用变量前忘记声明 ❌ <code>score = 95;</code> // 如果score未声明，这会导致错误 ✅ <code>int score = 95;</code> // 先声明后使用</p></li><li><p>数据类型不匹配 ❌ <code>int average = 95.5;</code> // 95.5是小数，int存储整数 ✅ <code>double average = 95.5;</code> // 使用double存储小数</p></li></ol></div><h2 id="🔄-修改变量的值" tabindex="-1"><a class="header-anchor" href="#🔄-修改变量的值"><span>🔄 修改变量的值</span></a></h2><div class="hint-container tip"><p class="hint-container-title">变量的特性</p><p>变量最酷的地方在于，你可以随时改变它们的值！就像换掉盒子里的东西一样。</p></div>',4)),c(o,{data:[{id:"修改变量示例"},{id:"输出结果"}]},{title0:e(({value:l,isActive:t})=>[...a[4]||(a[4]=[n("修改变量示例",-1)])]),title1:e(({value:l,isActive:t})=>[...a[5]||(a[5]=[n("输出结果",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[6]||(a[6]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" score "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"85"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 初始分数")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"原始分数："'),n(),s("span",{class:"token operator"},"<<"),n(" score "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 加分！")]),n(`
`),s("span",{class:"line"},[n("    score "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"95"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"更新后的分数："'),n(),s("span",{class:"token operator"},"<<"),n(" score "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 再加分！")]),n(`
`),s("span",{class:"line"},[n("    score "),s("span",{class:"token operator"},"="),n(" score "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 也可以写成 score += 5;")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"最终分数："'),n(),s("span",{class:"token operator"},"<<"),n(" score "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[7]||(a[7]=[s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text"},[s("pre",null,[s("code",{class:"language-text"},[s("span",{class:"line"},"原始分数：85"),n(`
`),s("span",{class:"line"},"更新后的分数：95"),n(`
`),s("span",{class:"line"},"最终分数：100"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[39]||(a[39]=p(`<div class="hint-container info"><p class="hint-container-title">真实场景</p><p>游戏中的计分系统就是使用变量实现的！想象一个&quot;打地鼠&quot;游戏：</p><ul><li>每打中一只地鼠，玩家的score变量就增加10分</li><li>如果打中了金地鼠，score变量增加50分</li><li>游戏可以随时显示最新的score值，而不需要重新计算总分</li></ul></div><div class="hint-container tip"><p class="hint-container-title">快速检查</p><p>执行以下代码后x的值是多少？</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">x <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>A. 10</li><li>B. 20</li><li>C. 25</li><li>D. 30</li></ul><details><summary>查看答案</summary><p>答案是 <strong>C. 25</strong>，因为：</p><ol><li>初始值 x = 10</li><li>x = x * 2 → x = 10 * 2 = 20</li><li>x = x + 5 → x = 20 + 5 = 25</li></ol></details></div><h2 id="🎲-变量的类型" tabindex="-1"><a class="header-anchor" href="#🎲-变量的类型"><span>🎲 变量的类型</span></a></h2><p>C++中有很多不同类型的变量，就像我们有不同类型的盒子来存放不同的物品：</p><div class="hint-container info"><p class="hint-container-title">常用变量类型表</p><table><thead><tr><th>类型</th><th>用途</th><th>例子</th></tr></thead><tbody><tr><td><code>int</code></td><td>整数</td><td><code>int age = 12;</code></td></tr><tr><td><code>double</code></td><td>小数</td><td><code>double price = 19.99;</code></td></tr><tr><td><code>char</code></td><td>单个字符</td><td><code>char initial = &#39;M&#39;;</code></td></tr><tr><td><code>string</code></td><td>文本</td><td><code>string message = &quot;你好！&quot;;</code></td></tr><tr><td><code>bool</code></td><td>真/假</td><td><code>bool isRaining = true;</code></td></tr></tbody></table></div>`,5)),c(o,{data:[{id:"整数类型"},{id:"小数类型"},{id:"字符和字符串"},{id:"布尔类型"}]},{title0:e(({value:l,isActive:t})=>[...a[8]||(a[8]=[n("整数类型",-1)])]),title1:e(({value:l,isActive:t})=>[...a[9]||(a[9]=[n("小数类型",-1)])]),title2:e(({value:l,isActive:t})=>[...a[10]||(a[10]=[n("字符和字符串",-1)])]),title3:e(({value:l,isActive:t})=>[...a[11]||(a[11]=[n("布尔类型",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[12]||(a[12]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 整数类型")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" age "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"12"),s("span",{class:"token punctuation"},";"),n("                "),s("span",{class:"token comment"},"// 年龄")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" score "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"95"),s("span",{class:"token punctuation"},";"),n("              "),s("span",{class:"token comment"},"// 分数")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" negativeNumber "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},";"),n("    "),s("span",{class:"token comment"},"// 负数")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"年龄: "'),n(),s("span",{class:"token operator"},"<<"),n(" age "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"分数: "'),n(),s("span",{class:"token operator"},"<<"),n(" score "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"负数示例: "'),n(),s("span",{class:"token operator"},"<<"),n(" negativeNumber "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[13]||(a[13]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 小数类型")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" height "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"1.75"),s("span",{class:"token punctuation"},";"),n("        "),s("span",{class:"token comment"},"// 身高（米）")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" weight "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"65.5"),s("span",{class:"token punctuation"},";"),n("        "),s("span",{class:"token comment"},"// 体重（千克）")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" pi "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3.14159"),s("span",{class:"token punctuation"},";"),n("         "),s("span",{class:"token comment"},"// 圆周率")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"身高: "'),n(),s("span",{class:"token operator"},"<<"),n(" height "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"米"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"体重: "'),n(),s("span",{class:"token operator"},"<<"),n(" weight "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"千克"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"圆周率约等于: "'),n(),s("span",{class:"token operator"},"<<"),n(" pi "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:e(({value:l,isActive:t})=>[...a[14]||(a[14]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 字符类型")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"char"),n(" grade "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token char"},"'A'"),s("span",{class:"token punctuation"},";"),n("            "),s("span",{class:"token comment"},"// 成绩等级")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"char"),n(" symbol "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token char"},"'#'"),s("span",{class:"token punctuation"},";"),n("           "),s("span",{class:"token comment"},"// 符号")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 字符串类型")]),n(`
`),s("span",{class:"line"},[n("    string name "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"小明"'),s("span",{class:"token punctuation"},";"),n("         "),s("span",{class:"token comment"},"// 姓名")]),n(`
`),s("span",{class:"line"},[n("    string message "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"你好，世界！"'),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},"// 消息")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"成绩等级: "'),n(),s("span",{class:"token operator"},"<<"),n(" grade "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"符号: "'),n(),s("span",{class:"token operator"},"<<"),n(" symbol "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"姓名: "'),n(),s("span",{class:"token operator"},"<<"),n(" name "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"消息: "'),n(),s("span",{class:"token operator"},"<<"),n(" message "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab3:e(({value:l,isActive:t})=>[...a[15]||(a[15]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 布尔类型")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"bool"),n(" isRaining "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},";"),n("       "),s("span",{class:"token comment"},"// 是否下雨")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"bool"),n(" hasPassedExam "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 是否通过考试")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"是否下雨: "'),n(),s("span",{class:"token operator"},"<<"),n(" isRaining "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"是否通过考试: "'),n(),s("span",{class:"token operator"},"<<"),n(" hasPassedExam "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 布尔值输出为0(假)或1(真)")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"true的值: "'),n(),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token boolean"},"true"),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"false的值: "'),n(),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token boolean"},"false"),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[40]||(a[40]=p('<div style="text-align:right;"><p><strong>【数学连接】</strong> 变量类型与数学中的数字集合类似：</p><ul><li><code>int</code>类似于整数集合 <code>Z = {-2, -1, 0, 1, 2, ...}</code></li><li><code>double</code>类似于实数集合 R，可以表示带小数点的数</li><li><code>bool</code>类似于集合 {0, 1} 或 {假, 真}，只有两个可能的值</li></ul></div><div style="text-align:center;"><p><strong>【记忆助手】</strong> 记住主要变量类型： &quot;整数用int存，小数double记， 单字符char装，字符串string放， 是非题bool解，类型要分清。&quot;</p></div><h2 id="🏷️-变量命名规则" tabindex="-1"><a class="header-anchor" href="#🏷️-变量命名规则"><span>🏷️ 变量命名规则</span></a></h2><p>给变量起名字有一些规则，就像给宠物起名字一样，不能太奇怪：</p><details class="hint-container details"><summary>变量命名规则</summary><ol><li>变量名只能包含字母、数字和下划线</li><li>变量名必须以字母或下划线开头</li><li>变量名区分大小写（<code>age</code>和<code>Age</code>是两个不同的变量）</li><li>变量名不能是C++的关键字（如<code>int</code>、<code>double</code>等）</li></ol></details>',5)),c(o,{data:[{id:"好的变量名"},{id:"不好的变量名"}]},{title0:e(({value:l,isActive:t})=>[...a[16]||(a[16]=[n("好的变量名",-1)])]),title1:e(({value:l,isActive:t})=>[...a[17]||(a[17]=[n("不好的变量名",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[18]||(a[18]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token comment"},"// 好的变量名例子")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(" studentAge "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"12"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"double"),n(" averageScore "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"92.5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("string firstName "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"小明"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"bool"),n(" hasCompletedHomework "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(" _privateCounter "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[19]||(a[19]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token comment"},"// 不好的变量名例子")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(" a "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"12"),s("span",{class:"token punctuation"},";"),n("                  "),s("span",{class:"token comment"},"// 不够描述性")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"double"),n(" avg "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"92.5"),s("span",{class:"token punctuation"},";"),n("           "),s("span",{class:"token comment"},"// 缩写可能不清晰")]),n(`
`),s("span",{class:"line"},[n("string n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},'"小明"'),s("span",{class:"token punctuation"},";"),n("            "),s("span",{class:"token comment"},"// 太短，不明确")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"bool"),n(" h "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},";"),n("               "),s("span",{class:"token comment"},"// 不知道这表示什么")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token number"},"1"),n("stPlace "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n("            "),s("span",{class:"token comment"},"// 不能以数字开头（非法）")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";"),n("               "),s("span",{class:"token comment"},"// 不能使用关键字（非法）")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[41]||(a[41]=p('<div class="hint-container important"><p class="hint-container-title">编程最佳实践</p><p>变量命名的建议：</p><ol><li>使用有意义的名字，能反映变量的用途</li><li>对于由多个单词组成的变量名，使用驼峰命名法（如<code>studentAge</code>）或下划线分隔（如<code>student_age</code>）</li><li>保持一致的命名风格</li></ol></div><div class="hint-container tip"><p class="hint-container-title">快速检查</p><p>以下哪个变量名是非法的？</p><ul><li>A. student_age</li><li>B. 1stPlace</li><li>C. userName</li><li>D. _count</li></ul><details><summary>查看答案</summary><p>答案是 <strong>B. 1stPlace</strong>，因为变量名不能以数字开头</p></details></div><h2 id="🔒-常量-不变的变量" tabindex="-1"><a class="header-anchor" href="#🔒-常量-不变的变量"><span>🔒 常量：不变的变量</span></a></h2><div class="hint-container warning"><p class="hint-container-title">重要概念</p><p>有时候，我们需要一些值在程序运行过程中永远不变，这时我们可以使用<strong>常量</strong>。常量就像是被锁起来的变量，一旦设定就不能改变。</p></div>',4)),c(o,{data:[{id:"常量示例"},{id:"输出结果"}]},{title0:e(({value:l,isActive:t})=>[...a[20]||(a[20]=[n("常量示例",-1)])]),title1:e(({value:l,isActive:t})=>[...a[21]||(a[21]=[n("输出结果",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[22]||(a[22]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 定义常量")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"const"),n(),s("span",{class:"token keyword"},"double"),n(" PI "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3.14159"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"const"),n(),s("span",{class:"token keyword"},"int"),n(" DAYS_IN_WEEK "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"7"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 尝试修改常量会导致错误")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// PI = 3.14;  // 这行会导致编译错误！")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"圆周率："'),n(),s("span",{class:"token operator"},"<<"),n(" PI "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"一周有 "'),n(),s("span",{class:"token operator"},"<<"),n(" DAYS_IN_WEEK "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'" 天"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 使用常量计算")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" radius "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" circumference "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"2"),n(),s("span",{class:"token operator"},"*"),n(" PI "),s("span",{class:"token operator"},"*"),n(" radius"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"半径为 "'),n(),s("span",{class:"token operator"},"<<"),n(" radius "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'" 的圆的周长是 "'),n(),s("span",{class:"token operator"},"<<"),n(" circumference "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[23]||(a[23]=[s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text"},[s("pre",null,[s("code",{class:"language-text"},[s("span",{class:"line"},"圆周率：3.14159"),n(`
`),s("span",{class:"line"},"一周有 7 天"),n(`
`),s("span",{class:"line"},"半径为 5 的圆的周长是 31.4159"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[42]||(a[42]=p('<div class="hint-container info"><p class="hint-container-title">真实场景</p><p>常量在科学计算中很常见。比如：</p><ul><li>当计算物体下落的速度时，我们需要使用重力加速度常量g = 9.8 m/s²</li><li>当计算电子设备功率时，我们可能需要使用电压常量</li><li>这些物理量在计算过程中通常不会改变</li></ul></div><div class="hint-container note"><p class="hint-container-title">常量命名约定</p><p>常量通常使用全大写字母命名，多个单词之间用下划线分隔，如<code>MAX_SCORE</code>、<code>PI</code>、<code>GAME_SPEED</code>等。这种约定使得常量在代码中很容易被识别。</p></div><h2 id="🧮-变量的运算" tabindex="-1"><a class="header-anchor" href="#🧮-变量的运算"><span>🧮 变量的运算</span></a></h2><p>你可以对变量进行各种运算，就像使用计算器一样：</p>',4)),c(o,{data:[{id:"基本运算"},{id:"乘除运算"},{id:"取余和复合运算"},{id:"输出结果示例"}]},{title0:e(({value:l,isActive:t})=>[...a[24]||(a[24]=[n("基本运算",-1)])]),title1:e(({value:l,isActive:t})=>[...a[25]||(a[25]=[n("乘除运算",-1)])]),title2:e(({value:l,isActive:t})=>[...a[26]||(a[26]=[n("取余和复合运算",-1)])]),title3:e(({value:l,isActive:t})=>[...a[27]||(a[27]=[n("输出结果示例",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[28]||(a[28]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" a "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" b "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 基本运算")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"a + b = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"+"),n(" b "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 加法")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"a - b = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"-"),n(" b "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 减法")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[29]||(a[29]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" a "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" b "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 乘除运算")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"a * b = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"*"),n(" b "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 乘法")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"a / b = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"/"),n(" b "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 整数除法（结果为3，不是3.333...）")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 使用double进行除法")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" c "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"10.0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" d "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3.0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"c / d = "'),n(),s("span",{class:"token operator"},"<<"),n(" c "),s("span",{class:"token operator"},"/"),n(" d "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 浮点数除法（结果为3.333...）")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:e(({value:l,isActive:t})=>[...a[30]||(a[30]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" a "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" b "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 取余运算")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"a % b = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"%"),n(" b "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 取余（10除以3的余数是1）")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 复合赋值运算符")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" x "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"初始x值: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    x "),s("span",{class:"token operator"},"+="),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 x = x + 3;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"x += 3 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    x "),s("span",{class:"token operator"},"-="),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 x = x - 2;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"x -= 2 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    x "),s("span",{class:"token operator"},"*="),n(),s("span",{class:"token number"},"4"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 x = x * 4;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"x *= 4 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    x "),s("span",{class:"token operator"},"/="),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 x = x / 2;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"x /= 2 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    x "),s("span",{class:"token operator"},"%="),n(),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 x = x % 3;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"x %= 3 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" x "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab3:e(({value:l,isActive:t})=>[...a[31]||(a[31]=[s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text"},[s("pre",null,[s("code",{class:"language-text"},[s("span",{class:"line"},"a + b = 13"),n(`
`),s("span",{class:"line"},"a - b = 7"),n(`
`),s("span",{class:"line"},"a * b = 30"),n(`
`),s("span",{class:"line"},"a / b = 3"),n(`
`),s("span",{class:"line"},"c / d = 3.33333"),n(`
`),s("span",{class:"line"},"a % b = 1"),n(`
`),s("span",{class:"line"},"初始x值: 5"),n(`
`),s("span",{class:"line"},"x += 3 后: 8"),n(`
`),s("span",{class:"line"},"x -= 2 后: 6"),n(`
`),s("span",{class:"line"},"x *= 4 后: 24"),n(`
`),s("span",{class:"line"},"x /= 2 后: 12"),n(`
`),s("span",{class:"line"},"x %= 3 后: 0"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[43]||(a[43]=p('<div class="hint-container important"><p class="hint-container-title">注意整数除法</p><p>在C++中，当两个整数相除时，结果也是整数，小数部分会被舍去。例如，<code>10 / 3</code>的结果是<code>3</code>，而不是<code>3.333...</code>。如果你想得到小数结果，至少有一个操作数必须是小数类型。</p></div><h2 id="🔢-递增和递减运算符" tabindex="-1"><a class="header-anchor" href="#🔢-递增和递减运算符"><span>🔢 递增和递减运算符</span></a></h2><p>C++提供了特殊的运算符来让变量加1或减1，这在计数和循环中非常有用：</p>',3)),c(o,{data:[{id:"递增递减示例"},{id:"输出结果"}]},{title0:e(({value:l,isActive:t})=>[...a[32]||(a[32]=[n("递增递减示例",-1)])]),title1:e(({value:l,isActive:t})=>[...a[33]||(a[33]=[n("输出结果",-1)])]),tab0:e(({value:l,isActive:t})=>[...a[34]||(a[34]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" count "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 递增运算符 ++")]),n(`
`),s("span",{class:"line"},[n("    count"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 count = count + 1;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"count++ 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" count "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 递减运算符 --")]),n(`
`),s("span",{class:"line"},[n("    count"),s("span",{class:"token operator"},"--"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 等同于 count = count - 1;")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"count-- 后: "'),n(),s("span",{class:"token operator"},"<<"),n(" count "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 前置和后置的区别")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" a "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" b "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" resultA "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"++"),n("a"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 先增加a，再赋值给resultA")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" resultB "),s("span",{class:"token operator"},"="),n(" b"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 先赋值给resultB，再增加b")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"++a 的结果: a = "'),n(),s("span",{class:"token operator"},"<<"),n(" a "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'", resultA = "'),n(),s("span",{class:"token operator"},"<<"),n(" resultA "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"b++ 的结果: b = "'),n(),s("span",{class:"token operator"},"<<"),n(" b "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'", resultB = "'),n(),s("span",{class:"token operator"},"<<"),n(" resultB "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:t})=>[...a[35]||(a[35]=[s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text"},[s("pre",null,[s("code",{class:"language-text"},[s("span",{class:"line"},"count++ 后: 6"),n(`
`),s("span",{class:"line"},"count-- 后: 5"),n(`
`),s("span",{class:"line"},"++a 的结果: a = 6, resultA = 6"),n(`
`),s("span",{class:"line"},"b++ 的结果: b = 6, resultB = 5"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[44]||(a[44]=p(`<div class="hint-container warning"><p class="hint-container-title">前置与后置的区别</p><ul><li><strong>前置递增/递减</strong> (<code>++i</code> 或 <code>--i</code>): 先增加/减少变量的值，然后返回新值</li><li><strong>后置递增/递减</strong> (<code>i++</code> 或 <code>i--</code>): 先返回变量的当前值，然后增加/减少变量的值</li></ul></div><h2 id="🎮-动手实践" tabindex="-1"><a class="header-anchor" href="#🎮-动手实践"><span>🎮 动手实践</span></a></h2><p>编程最好的学习方式就是动手做！试试下面的小任务：</p><details class="hint-container details"><summary>基础练习 🌟</summary><p>创建一个程序，定义并使用至少三种不同类型的变量（如int、double、string）</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">double</span> height <span class="token operator">=</span> <span class="token number">1.55</span><span class="token punctuation">;</span></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;小红&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;我的名字是&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;，今年&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;岁，身高&quot;</span> <span class="token operator">&lt;&lt;</span> height <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;米。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>进阶练习 🌟🌟</summary><p>编写一个简单的成绩计算程序，计算三门课的平均分</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 定义三门课的成绩</span></span>
<span class="line">    <span class="token keyword">int</span> mathScore <span class="token operator">=</span> <span class="token number">95</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> chineseScore <span class="token operator">=</span> <span class="token number">88</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> englishScore <span class="token operator">=</span> <span class="token number">92</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 计算总分和平均分</span></span>
<span class="line">    <span class="token keyword">int</span> totalScore <span class="token operator">=</span> mathScore <span class="token operator">+</span> chineseScore <span class="token operator">+</span> englishScore<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">double</span> averageScore <span class="token operator">=</span> totalScore <span class="token operator">/</span> <span class="token number">3.0</span><span class="token punctuation">;</span>  <span class="token comment">// 使用3.0确保得到小数结果</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 输出结果</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;数学成绩：&quot;</span> <span class="token operator">&lt;&lt;</span> mathScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;语文成绩：&quot;</span> <span class="token operator">&lt;&lt;</span> chineseScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;英语成绩：&quot;</span> <span class="token operator">&lt;&lt;</span> englishScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;总分：&quot;</span> <span class="token operator">&lt;&lt;</span> totalScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;平均分：&quot;</span> <span class="token operator">&lt;&lt;</span> averageScore <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>挑战练习 🌟🌟🌟</summary><p>创建一个简单的游戏状态系统，包含玩家的生命值、分数和等级，并模拟一些游戏事件（如获得分数、受到伤害、升级）</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 初始化游戏状态</span></span>
<span class="line">    <span class="token keyword">int</span> health <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token keyword">int</span> POINTS_PER_LEVEL <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">// 每100分升一级</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== 游戏开始 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;生命值: &quot;</span> <span class="token operator">&lt;&lt;</span> health <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 分数: &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 等级: &quot;</span> <span class="token operator">&lt;&lt;</span> level <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 模拟游戏事件</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n[事件] 玩家击败了一个敌人！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    score <span class="token operator">+=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;生命值: &quot;</span> <span class="token operator">&lt;&lt;</span> health <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 分数: &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 等级: &quot;</span> <span class="token operator">&lt;&lt;</span> level <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n[事件] 玩家受到了伤害！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    health <span class="token operator">-=</span> <span class="token number">30</span><span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;生命值: &quot;</span> <span class="token operator">&lt;&lt;</span> health <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 分数: &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 等级: &quot;</span> <span class="token operator">&lt;&lt;</span> level <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n[事件] 玩家获得了宝箱！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    score <span class="token operator">+=</span> <span class="token number">50</span><span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;生命值: &quot;</span> <span class="token operator">&lt;&lt;</span> health <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 分数: &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 等级: &quot;</span> <span class="token operator">&lt;&lt;</span> level <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 检查是否升级</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;=</span> POINTS_PER_LEVEL<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        level<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n恭喜！玩家升级了！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 升级奖励：恢复生命值</span></span>
<span class="line">        health <span class="token operator">+=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>health <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> health <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token comment">// 生命值上限为100</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n===== 当前状态 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;生命值: &quot;</span> <span class="token operator">&lt;&lt;</span> health <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 分数: &quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;, 等级: &quot;</span> <span class="token operator">&lt;&lt;</span> level <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="🧠-思考题" tabindex="-1"><a class="header-anchor" href="#🧠-思考题"><span>🧠 思考题</span></a></h2><div class="hint-container info"><p class="hint-container-title">思考以下问题</p><ol><li>为什么我们需要不同类型的变量？为什么不能只用一种类型存储所有数据？</li><li>常量和变量有什么区别？什么情况下应该使用常量而不是变量？</li><li>如果你要开发一个学生信息管理系统，你会需要哪些变量？每个变量应该使用什么类型？</li></ol></div><h2 id="🎯-挑战任务" tabindex="-1"><a class="header-anchor" href="#🎯-挑战任务"><span>🎯 挑战任务</span></a></h2><div class="hint-container warning"><p class="hint-container-title">迷你项目：温度转换器</p><p>创建一个温度转换程序，可以将摄氏度转换为华氏度，或者将华氏度转换为摄氏度。</p><p>转换公式：</p><ul><li>华氏度 = 摄氏度 × 9/5 + 32</li><li>摄氏度 = (华氏度 - 32) × 5/9</li></ul><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 定义变量</span></span>
<span class="line">    <span class="token keyword">double</span> celsius <span class="token operator">=</span> <span class="token number">25.0</span><span class="token punctuation">;</span>       <span class="token comment">// 摄氏度</span></span>
<span class="line">    <span class="token keyword">double</span> fahrenheit<span class="token punctuation">;</span>           <span class="token comment">// 华氏度</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 摄氏度转华氏度</span></span>
<span class="line">    fahrenheit <span class="token operator">=</span> celsius <span class="token operator">*</span> <span class="token number">9.0</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> celsius <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 摄氏度 = &quot;</span> <span class="token operator">&lt;&lt;</span> fahrenheit <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 华氏度&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 华氏度转摄氏度</span></span>
<span class="line">    celsius <span class="token operator">=</span> <span class="token punctuation">(</span>fahrenheit <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5.0</span><span class="token operator">/</span><span class="token number">9.0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> fahrenheit <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 华氏度 = &quot;</span> <span class="token operator">&lt;&lt;</span> celsius <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 摄氏度&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：确保在除法运算中使用小数（如9.0/5.0）以获得准确的结果。</p></div><h2 id="📚-本章小结" tabindex="-1"><a class="header-anchor" href="#📚-本章小结"><span>📚 本章小结</span></a></h2><div style="text-align:center;"><p>恭喜你完成了第三章的学习！现在你已经：</p></div><div class="hint-container info"><p class="hint-container-title">学习成果</p><ul><li>🌟 了解了什么是<strong>变量</strong>以及它们的重要性</li><li>🌟 学会了如何创建和使用不同类型的变量</li><li>🌟 掌握了变量命名的规则和最佳实践</li><li>🌟 理解了<strong>常量</strong>的概念和用途</li><li>🌟 学会了如何对变量进行各种运算</li></ul></div><div class="hint-container note"><p class="hint-container-title">下章预告</p><p>在下一章中，我们将学习如何通过<code>cin</code>从用户那里获取输入，这样你的程序就可以变得更加交互式了！准备好继续你的编程冒险了吗？</p></div>`,14))])}const y=i(m,[["render",v]]),w=JSON.parse('{"path":"/docs/csp/csp_level1/csp_03_CPP_Variables/","title":"第3章：C++的变量 📦","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"git":{"createdTime":1741319126000,"updatedTime":1742131209000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":3,"url":"https://github.com/Tivonfeng"}]},"readingTime":{"minutes":12.93,"words":3880},"filePathRelative":"docs/csp/csp_level1/csp_03_CPP_Variables/index.md"}');export{y as comp,w as data};
