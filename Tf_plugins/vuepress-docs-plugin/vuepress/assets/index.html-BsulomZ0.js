import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,d as p,b as t,e as n,w as l,r as o,o as x,f as i}from"./app-By3Qqt_-.js";const g={},f={class:"hint-container tip"},u={style:{"text-align":"center"}},y={href:"http://os.lqcode.fun/teaching/mineCourse/courseUnitCard?id=1579744029216636930",target:"_blank",rel:"noopener noreferrer"},m={style:{"text-align":"center"}},b={href:"http://playedu.lqcode.fun:9800",target:"_blank",rel:"noopener noreferrer"},_={style:{"text-align":"center"}},q={href:"http://os.lqcode.fun/teaching/mineCourse/courseUnitCard?id=1579744029216636930",target:"_blank",rel:"noopener noreferrer"},C={style:{"text-align":"center"}},v={href:"http://playedu.lqcode.fun:9800",target:"_blank",rel:"noopener noreferrer"},k={style:{"text-align":"center"}},E={href:"http://os.lqcode.fun/teaching/mineCourse/courseUnitCard?id=1579744029216636930",target:"_blank",rel:"noopener noreferrer"},S={style:{"text-align":"center"}},B={href:"http://playedu.lqcode.fun:9800",target:"_blank",rel:"noopener noreferrer"},A={style:{"text-align":"center"}},T={href:"http://os.lqcode.fun/teaching/mineCourse/courseUnitCard?id=1579744029216636930",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"center"}},D={href:"http://playedu.lqcode.fun:9800",target:"_blank",rel:"noopener noreferrer"};function V(U,e){const a=o("HopeIcon"),d=o("Tabs");return x(),h("div",null,[e[13]||(e[13]=p('<h1 id="scratch世界的高级物种们-字符串" tabindex="-1"><a class="header-anchor" href="#scratch世界的高级物种们-字符串"><span>Scratch世界的高级物种们 | 字符串</span></a></h1><h2 id="〽️-什么是字符串呢" tabindex="-1"><a class="header-anchor" href="#〽️-什么是字符串呢"><span>〽️ 什么是字符串呢</span></a></h2><ul><li><p>我给大家举个非常形象的例子：同学们一定去过某些景区，通常情况下，会有那种卖手串的，就像旁边图片这样的，这会大家应该有个概念了</p></li><li><p>所以我们谈论字符串时，可以想象成一串珠子，每个珠子上都有一个字母或数字。这些珠子可以按照特定的顺序排列，形成一个有意义的词语或句子。</p></li><li><p>假设我们有一串彩色的珠子，上面分别写着字母&quot;A&quot;、&quot;B&quot;、&quot;C&quot;、&quot;D&quot;和&quot;E&quot;。我们可以将这些珠子串起来，得到一个字符串，比如 &quot;ABCDE&quot;。</p></li><li><p>就像我们可以通过改变珠子的顺序来改变字符串的内容一样，我们也可以改变珠子的颜色或添加新的珠子，来改变字符串的样子。比如，我们可以将珠子的顺序改变为 &quot;EDCBA&quot;，或者在字符串的末尾添加一个珠子，变成 &quot;ABCDEF&quot;。</p></li><li><p>字符串的长度就是珠子的数量，可以用来表示字符串有多长。比如，字符串 &quot;Hello&quot; 的长度是5，因为它由5个珠子（字母）组成。</p></li></ul><p>![自定义姓名手串](index.assets/1.jpeg =300x)</p><h2 id="〽️-字符串的相关程序模块" tabindex="-1"><a class="header-anchor" href="#〽️-字符串的相关程序模块"><span>〽️ 字符串的相关程序模块</span></a></h2><p>我们一起来看一看，在scratch里，跟字符串相关模块总共有几个呢？</p><p>其实只有4个，请看下面：</p><details class="hint-container details"><summary>程序模块图片</summary><p><strong>总共4个字符串相关程序模块</strong></p><table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:center;">功能</th><th style="text-align:center;">程序块</th><th style="text-align:center;">说明</th><th style="text-align:center;">演示</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">字符串的拼接</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-cnzMqmD4@2x.png =300x)</td><td style="text-align:center;">用于连接两个字符串</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-AQj4gqm8.gif =100x)</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">字符串中提取字符 <br> <mark>普通访问</mark></td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-T3Oi7kYT@2x.png =300x)</td><td style="text-align:center;">访问字符串中的某个字符</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-K4CklykB.gif =100x)</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">字符串的字符数</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-ddkNxEqt@2x.png =300x)</td><td style="text-align:center;">返回字符串的总字符数</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-qqELKbcV.gif =100x)</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">字符串是否包含子串</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-COeLofma@2x.png =300x)</td><td style="text-align:center;">字符串是否包含某个子串 <br> 必须是连续的字符串</td><td style="text-align:center;">![](index.assets/CleanShot-2023-09-24-Df1SNE68.gif =100x)</td></tr></tbody></table></details><h2 id="〽️-字符串的遍历访问" tabindex="-1"><a class="header-anchor" href="#〽️-字符串的遍历访问"><span>〽️ 字符串的遍历访问</span></a></h2><h3 id="🎈-什么是遍历" tabindex="-1"><a class="header-anchor" href="#🎈-什么是遍历"><span>🎈 什么是遍历</span></a></h3><p>你去买糖果，糖果店里有很多种类的糖果，你不知道要选哪一个，你跟服务员说：把每种糖果都拿一颗来给我尝一下，我再决定买哪个？<br> 这种把每个种类的糖果都依次尝一遍的过程，就是遍历</p><p>字符串是由多个字符组成的，我们对字符串的遍历，实际上就是把字符串中的每个字符依次访问一遍</p><h3 id="🎈-字符串的遍历访问模板" tabindex="-1"><a class="header-anchor" href="#🎈-字符串的遍历访问模板"><span>🎈 字符串的遍历访问模板</span></a></h3><p>![遍历模板](index.assets/image.png =400x)</p><h3 id="🎈-随堂练习" tabindex="-1"><a class="header-anchor" href="#🎈-随堂练习"><span>🎈 随堂练习</span></a></h3><p><a href="#%E3%80%BD%EF%B8%8F-%E5%AE%9E%E6%88%98%E7%BC%96%E7%A8%8B">【4000】字符串-逆序输出 </a></p><h2 id="〽️-实战编程" tabindex="-1"><a class="header-anchor" href="#〽️-实战编程"><span>〽️ 实战编程</span></a></h2>',17)),t("div",f,[e[12]||(e[12]=t("p",{class:"hint-container-title"},"实战编程",-1)),n(d,{data:[{id:"随堂练习"},{id:"实战演练"}]},{title0:l(({value:s,isActive:r})=>[...e[0]||(e[0]=[i("随堂练习",-1)])]),title1:l(({value:s,isActive:r})=>[...e[1]||(e[1]=[i("实战演练",-1)])]),tab0:l(({value:s,isActive:r})=>[t("table",null,[e[4]||(e[4]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"序号"),t("th",{style:{"text-align":"center"}},"题目"),t("th",{style:{"text-align":"center"}},"编程"),t("th",{style:{"text-align":"center"}},"视频精讲")])],-1)),t("tbody",null,[t("tr",null,[e[2]||(e[2]=t("td",{style:{"text-align":"center"}},"1",-1)),e[3]||(e[3]=t("td",{style:{"text-align":"center"}},"【4000】字符串-逆序输出",-1)),t("td",u,[t("a",y,[n(a,{icon:"fa-solid fa-laptop-code"})])]),t("td",m,[t("a",b,[n(a,{icon:"fa-solid fa-video"})])])])])])]),tab1:l(({value:s,isActive:r})=>[t("table",null,[e[11]||(e[11]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"序号"),t("th",{style:{"text-align":"center"}},"题目"),t("th",{style:{"text-align":"center"}},"编程"),t("th",{style:{"text-align":"center"}},"视频精讲")])],-1)),t("tbody",null,[t("tr",null,[e[5]||(e[5]=t("td",{style:{"text-align":"center"}},"1",-1)),e[6]||(e[6]=t("td",{style:{"text-align":"center"}},"【4002】字符串-数字反转",-1)),t("td",_,[t("a",q,[n(a,{icon:"fa-solid fa-laptop-code"})])]),t("td",C,[t("a",v,[n(a,{icon:"fa-solid fa-video"})])])]),t("tr",null,[e[7]||(e[7]=t("td",{style:{"text-align":"center"}},"2",-1)),e[8]||(e[8]=t("td",{style:{"text-align":"center"}},"【4002】字符串-数字反转",-1)),t("td",k,[t("a",E,[n(a,{icon:"fa-solid fa-laptop-code"})])]),t("td",S,[t("a",B,[n(a,{icon:"fa-solid fa-video"})])])]),t("tr",null,[e[9]||(e[9]=t("td",{style:{"text-align":"center"}},"3",-1)),e[10]||(e[10]=t("td",{style:{"text-align":"center"}},"【4003】字符串-四字词语接龙",-1)),t("td",A,[t("a",T,[n(a,{icon:"fa-solid fa-laptop-code"})])]),t("td",N,[t("a",D,[n(a,{icon:"fa-solid fa-video"})])])])])])]),_:1})])])}const H=c(g,[["render",V]]),O=JSON.parse('{"path":"/docs/scratch/scratch_level3/scratch_07_str/","title":"Scratch世界的高级物种们 | 字符串","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"git":{"createdTime":1698335100000,"updatedTime":1699591729000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":7,"url":"https://github.com/Tivonfeng"}]},"readingTime":{"minutes":2.91,"words":874},"filePathRelative":"docs/scratch/scratch_level3/scratch_07_str/index.md"}');export{H as comp,O as data};
