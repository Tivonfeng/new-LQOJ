import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as l,e as u,w as t,r as k,o as r,b as n,f as s}from"./app-By3Qqt_-.js";const d="/docs/assets/CleanShot-2023-11-10-6CzWZKsB@2x-Zw_7jbLY.png",m={};function b(v,a){const c=k("Tabs");return r(),i("div",null,[a[4]||(a[4]=l('<h1 id="python世界的物种们-列表" tabindex="-1"><a class="header-anchor" href="#python世界的物种们-列表"><span>Python世界的物种们 | 列表</span></a></h1><h2 id="〽️-电子产品中的列表" tabindex="-1"><a class="header-anchor" href="#〽️-电子产品中的列表"><span>〽️ 电子产品中的列表</span></a></h2><figure><img src="'+d+`" alt="电子产品中的列表" tabindex="0" loading="lazy"><figcaption>电子产品中的列表</figcaption></figure><div class="hint-container info"><p class="hint-container-title">思考🤔</p><p>为什么我们要用列表来展示数据呢？</p><details class="hint-container details"><summary>答案</summary><p>列表可以有条理的显示数据 让我们更加直观的看到效果</p></details></div><h2 id="〽️-python中的列表" tabindex="-1"><a class="header-anchor" href="#〽️-python中的列表"><span>〽️ Python中的列表</span></a></h2><p>一连串的变量<br> 普通的变量：每次只能存储单个元素<br> 列表：可以存储多个元素 List（列表）是Python中使⽤最频繁的数据类型，在其他语⾔中通常叫做数组，</p><h2 id="〽️-列表创建、查找-访问-、修改、增加、删除" tabindex="-1"><a class="header-anchor" href="#〽️-列表创建、查找-访问-、修改、增加、删除"><span>〽️ 列表创建、查找（访问）、修改、增加、删除</span></a></h2><h3 id="🎈-如何创建一个列表" tabindex="-1"><a class="header-anchor" href="#🎈-如何创建一个列表"><span>🎈 如何创建一个列表</span></a></h3><ol><li>创建列表</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 空列表</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#有一个元素的列表，并且元素是一个数字类型的 1</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token comment"># 有5个元素的列表</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.1</span><span class="token punctuation">]</span> <span class="token comment"># 有两个浮点数的列表</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 两个字符串的列表</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 多类型融合的列表，“大锅炖”</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 列表作为元素的列表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>给列表找个家</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">num <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token comment"># 创建完列表之后赋值给一个变量，这个列表就变成了一个“有家可归的宝宝”</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="🎈-如何访问列表中的元素" tabindex="-1"><a class="header-anchor" href="#🎈-如何访问列表中的元素"><span>🎈 如何访问列表中的元素</span></a></h3><ol><li>基础访问 通过下标来访问</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">语法：列表名<span class="token punctuation">[</span>下标<span class="token punctuation">]</span></span>
<span class="line">ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 结果就是1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下标：就是列表中的元素序号 ❗️：99.9999%代码编程里，下标都是从0开始的！！！！！</p><ol start="2"><li>切片访问 切片访问：可以切出一片元素，一堆元素 语法： 列表名[起始访问地址:终点访问地址:步长]</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">ls1 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 正切且步长为1</span></span>
<span class="line">ls2 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment"># 正切且步长为2</span></span>
<span class="line">ls3 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 倒切切步长为1</span></span>
<span class="line">ls4 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 倒切且步长为2</span></span>
<span class="line">ls5 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># 默认正序从头到尾访问且步长为1</span></span>
<span class="line">ls6 <span class="token operator">=</span> ls<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># 默认正序，从第3个元素起，访问到末尾，且步长为1</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 切出来的片仍然是一个列表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>遍历访问</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> ls<span class="token punctuation">:</span> <span class="token comment"># 不够灵活</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 灵活</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🎈-列表的修改" tabindex="-1"><a class="header-anchor" href="#🎈-列表的修改"><span>🎈 列表的修改</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">ls<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表的增加" tabindex="-1"><a class="header-anchor" href="#列表的增加"><span>列表的增加</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">ls<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 在末尾追加一个元素</span></span>
<span class="line">ls<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>position<span class="token punctuation">,</span><span class="token builtin">object</span><span class="token punctuation">)</span> <span class="token comment"># 在指定的位置进行增加</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表的删除" tabindex="-1"><a class="header-anchor" href="#列表的删除"><span>列表的删除</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除指定位置的元素，默认为最后一个</span></span>
<span class="line">ls<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除指定的元素</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表的修改" tabindex="-1"><a class="header-anchor" href="#列表的修改"><span>列表的修改</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls<span class="token punctuation">[</span>index<span class="token punctuation">]</span>  <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查找" tabindex="-1"><a class="header-anchor" href="#查找"><span>查找</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">ls<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span> <span class="token comment"># 结果是这个元素出现的次数</span></span>
<span class="line">ls<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span> <span class="token comment"># 结果是这个元素第一次出现的位置，如果找不到就会报错</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>举个栗子🌰</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 定义一个name_list空列表</span></span>
<span class="line"><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39; </span>
<span class="line">    欢迎进入绿旗花名册管理系统</span>
<span class="line">    welcomt to LQ&#39;s name manage system</span>
<span class="line">    </span>
<span class="line">    1. 初始化一个花名册 init system</span>
<span class="line">    2. 增加一个名单 add a name</span>
<span class="line">    3. 删除一个名单 delete a name</span>
<span class="line">    4. 打印花名单 print name list</span>
<span class="line">    &#39;&#39;&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 用户交互界面</span></span>
<span class="line">    </span>
<span class="line">    choose <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入你的选择：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 获取用户的选择</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请问需要初始化多少个名单how many names:：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;请输入第</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">个名单：&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">            name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入你要增加的名单：&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入你要删除的名单：&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        name_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;********* 名单列表 **********&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;序号\\t\\t名单&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;No.</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token format-spec">02d</span><span class="token punctuation">}</span></span><span class="token string">\\t\\t</span><span class="token interpolation"><span class="token punctuation">{</span>name_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">8s</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;****************************&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;输错了！给老子重新输入！！！！！&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="〽️-二维列表" tabindex="-1"><a class="header-anchor" href="#〽️-二维列表"><span>〽️ 二维列表</span></a></h2><h3 id="🎈-什么是二维列表" tabindex="-1"><a class="header-anchor" href="#🎈-什么是二维列表"><span>🎈 什么是二维列表</span></a></h3><h3 id="🎈-如何创建一个二维列表" tabindex="-1"><a class="header-anchor" href="#🎈-如何创建一个二维列表"><span>🎈 如何创建一个二维列表</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🎈-二维列表的增删改查操作" tabindex="-1"><a class="header-anchor" href="#🎈-二维列表的增删改查操作"><span>🎈 二维列表的增删改查操作</span></a></h3>`,37)),u(c,{data:[{id:"常用操作方法"},{id:"举个栗子🌰"}]},{title0:t(({value:p,isActive:e})=>[...a[0]||(a[0]=[s("常用操作方法",-1)])]),title1:t(({value:p,isActive:e})=>[...a[1]||(a[1]=[s("举个栗子🌰",-1)])]),tab0:t(({value:p,isActive:e})=>[...a[2]||(a[2]=[n("p",null,null,-1)])]),tab1:t(({value:p,isActive:e})=>[...a[3]||(a[3]=[n("div",{class:"language-python line-numbers-mode","data-highlighter":"prismjs","data-ext":"py"},[n("pre",null,[n("code",{class:"language-python"},[n("span",{class:"line"},[s("myclass "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token comment"},"# 定义一个学生列表")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 增加一个学生信息列表")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"add_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    student "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token comment"},"# 定义一个学生信息列表")]),s(`
`),n("span",{class:"line"},[s("    name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input a name:'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 获取姓名")]),s(`
`),n("span",{class:"line"},[s("    num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input a num'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 获取学号")]),s(`
`),n("span",{class:"line"},[s("    student"),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    student"),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 把姓名和学号绑定进学生信息列表  ")]),s(`
`),n("span",{class:"line"},[s("    myclass"),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("student"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 把生成学生信息列表加进学生列表")]),s(`
`),n("span",{class:"line"},"    "),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"insert_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    student "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("    index "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),s("index "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"or"),s(" index "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        index "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'what position do you want to insert:'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 循环输入一个位置，直到合法输入 ")]),s(`
`),n("span",{class:"line"},"        "),s(`
`),n("span",{class:"line"},[s("    name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input a name:'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input a num'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    student_info"),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    student_info"),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    myclass"),n("span",{class:"token punctuation"},"."),s("insert"),n("span",{class:"token punctuation"},"("),s("index"),n("span",{class:"token punctuation"},","),s("student"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"modify_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input the name you want to modify:'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    exist "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("            exist "),n("span",{class:"token operator"},"="),s(" i")]),s(`
`),n("span",{class:"line"},"            "),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("exist "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        new_num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input a new num:'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        myclass"),n("span",{class:"token punctuation"},"["),s("exist"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" new_num")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'the name is not exist'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},"        "),s(`
`),n("span",{class:"line"},"        "),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"find_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    num "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'please input the num you want to find:'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    exist "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" num"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("            exist "),n("span",{class:"token operator"},"="),s(" i")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("exist "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"return"),s(" myclass"),n("span",{class:"token punctuation"},"["),s("exist"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'the num is not exist'"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"sort_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"# 使用冒泡排序按序号降序进行排序    ")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"for"),s(" j "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"-"),s(" i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("                temp "),n("span",{class:"token operator"},"="),s(" myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("                myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("                myclass"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token operator"},"+"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" temp ")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"# 格式化输出排名")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(" myclass"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},"f'No."),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"   name:"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("i"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"'")]),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# 主程序")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token boolean"},"True"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token triple-quoted-string string"},"'''"),s(`
`),n("span",{class:"line"},"    Student Manage System"),s(`
`),n("span",{class:"line"},"    1. add_student"),s(`
`),n("span",{class:"line"},"    2. insert_student"),s(`
`),n("span",{class:"line"},"    3. modify_student"),s(`
`),n("span",{class:"line"},"    4. find_student"),s(`
`),n("span",{class:"line"},"    5. sort_student"),s(`
`),n("span",{class:"line"},"    '''"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    choose "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'choose:'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("choose "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        add_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"elif"),s(),n("span",{class:"token punctuation"},"("),s("choose "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        insert_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"elif"),s(),n("span",{class:"token punctuation"},"("),s("choose "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        modify_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"elif"),s(),n("span",{class:"token punctuation"},"("),s("choose "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("find_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"elif"),s(),n("span",{class:"token punctuation"},"("),s("choose "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        sort_student"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"pass")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("myclass"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])]),_:1}),a[5]||(a[5]=l(`<h2 id="〽️-关于如何把字符串分割" tabindex="-1"><a class="header-anchor" href="#〽️-关于如何把字符串分割"><span>〽️ 关于如何把字符串分割</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">语法： 字符串名<span class="token punctuation">.</span>split<span class="token punctuation">(</span>基于什么分割<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 假如现有一个字符串&#39;1 2 3 4 5&#39;，我们如果想把这些数字拆分，我们可以这样做，使用split()方法可以把一个字符串拆分成一个列表，如下：</span></span>
<span class="line"><span class="token string">&quot;1 2 3 4 5&quot;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>  <span class="token operator">=</span>》 <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 具体的语法这样写</span></span>
<span class="line">num <span class="token operator">=</span> <span class="token string">&#39;1 2 3 4 5&#39;</span></span>
<span class="line">num<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 拆分完了之后，如何调用</span></span>
<span class="line">num<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  </span>
<span class="line">num<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在oj中我们可以使用下面的代码直接读取一行样例输入进行拆分</span></span>
<span class="line"><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const g=o(m,[["render",b]]),f=JSON.parse('{"path":"/docs/python/python_level2/python_02_sequence/python_03_list/","title":"Python世界的物种们 | 列表","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"git":{"createdTime":1698335100000,"updatedTime":1719199244000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":11,"url":"https://github.com/Tivonfeng"},{"name":"Tivon feng","username":"","email":"tivonfeng@gmail.com","commits":1}]},"readingTime":{"minutes":4.86,"words":1459},"filePathRelative":"docs/python/python_level2/python_02_sequence/python_03_list/index.md"}');export{g as comp,f as data};
