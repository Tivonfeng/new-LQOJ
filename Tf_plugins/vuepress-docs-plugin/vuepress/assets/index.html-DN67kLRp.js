import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as l,e as r,w as t,r as m,o as u,b as s,f as n}from"./app-By3Qqt_-.js";const d={};function k(h,a){const i=m("Tabs");return u(),o("div",null,[a[14]||(a[14]=l(`<h1 id="时间复杂度分析" tabindex="-1"><a class="header-anchor" href="#时间复杂度分析"><span>时间复杂度分析</span></a></h1><h2 id="〽️-什么是时间复杂度" tabindex="-1"><a class="header-anchor" href="#〽️-什么是时间复杂度"><span>〽️ 什么是时间复杂度</span></a></h2><p>时间复杂度是一个函数，用一种确定的方式描述了算法运行的<strong>时间</strong>。</p><p>在软件开发过程中，工程师通过时间复杂度<strong>估算</strong>程序运行的时间。</p><p>形象的理解，例如，数学考试中，小明和小红面对同一道数学题，小明用了10分钟，小红用了20分钟。那么可以粗略的认为小明解法的时间复杂度为10分钟，小红解法的时间复杂度为20分钟。可以直观地看出，小明的解法好于小红的解法，也就是小明解法的时间复杂度低于小红的解法。</p><p>在实际应用中，用实际的运行时间来判断算法的好坏较为困难。实际的运行时间不仅仅取决于算法时间复杂度的高低，与我们使用的硬件如电脑配置也有较大的关系。通常，我们使用 <em><strong>O</strong></em> 来表示时间复杂度，例如 <em><strong>O(n)</strong></em>、<em><strong>O(n^2)</strong></em> 等等。</p><p>![算法导论](index.assets/图片.png =200x)</p><p>英文字母 <em><strong>O</strong></em> ，在《算法导论》中的解释是：<em><strong>O</strong></em> 用来表示上界，当用它作为算法在最坏情况下运行时间的上界时，就是对任意数据输入的运行时间的上界。说人话就是，同一个算法，在面对各种情况的输入时，它的最长运行的时间上限，描述的是一个大概的时间范围。</p><p>例如，把人脑想象为一台计算机，两个数的加法，<em><strong>A+B</strong></em>，当我们去计算10以内的加法，计算的很快，但是我们不能简单的认为10以内的时间复杂度就是 <em><strong>A+B</strong></em> 的时间复杂度。当把数字扩大变为 <em><strong>987654321+123456789</strong></em> 时，计算的速度显著下降。当把数字再扩大，计算的速度更慢。所以时间复杂度就是描述了这个算法最长的运行时间，大致估算了最坏情况下的一个上限。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line">using namespace std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token class-name">clock_t</span> start <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">			</span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token class-name">clock_t</span> end <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;经过了&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;秒&quot;</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码段A：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line">using namespace std<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;拿下CSP-J，冲冲冲！\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main函数内部有2条语句，各执行1次，内部一共执行<strong>2次</strong>。</p><p>代码段B：</p><div class="language-C++ line-numbers-mode" data-highlighter="prismjs" data-ext="C++"><pre><code class="language-C++"><span class="line">#include&lt;bits/stdc++.h&gt;</span>
<span class="line">using namespace std;</span>
<span class="line">int main(){</span>
<span class="line">    int n = 0;//一次</span>
<span class="line">    cin &gt;&gt; n;//一次</span>
<span class="line">    //int i = 0 一次；i &lt; n n+1 次；i++ n次</span>
<span class="line">    for(int i = 0; i &lt; n; i++){</span>
<span class="line">        printf(&quot;拿下CSP-J，冲冲冲！\\n&quot;);//n次</span>
<span class="line">    }</span>
<span class="line">    return 0;//一次</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main函数内部有7条语句，一共执行了<strong>3xn+5次</strong>。</p><p>我们用 <strong>T(n)</strong> 来表示一段代码的总执行次数，那么：</p><table><thead><tr><th></th><th>代码段A</th><th>代码段B</th></tr></thead><tbody><tr><td><strong>T(n)</strong></td><td>2</td><td>3xn+5</td></tr></tbody></table><p>接下来使用 <strong>T(n)</strong> 来估算时间复杂度，</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>常数</mtext><mo>→</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T(n) = \\text{常数} \\rightarrow 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">常数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>常数</mtext><mo>×</mo><mi>n</mi><mo>+</mo><mtext>常数</mtext><mo>→</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">T(n) = \\text{常数} \\times n + \\text{常数} \\rightarrow n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord cjk_fallback">常数</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">常数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>5</mn><mo>×</mo><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mn>66</mn><mo>×</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>777</mn><mo>×</mo><mi>n</mi><mo>+</mo><mn>8888</mn><mo>→</mo><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">T(n) = 5 \\times n^3 + 66 \\times n^2 + 777 \\times n + 8888 \\rightarrow n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">66</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">777</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8888</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></p><p>在加上O()，就得到了最终的时间复杂度表示：</p><table><thead><tr><th style="text-align:center;">T(n)</th><th style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></th><th style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mi>n</mi><mo>+</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">3 \\times n + 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></th><th style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mn>66</mn><mo>×</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>777</mn><mo>×</mo><mi>n</mi><mo>+</mo><mn>8888</mn></mrow><annotation encoding="application/x-tex">5 \\times n^3 + 66 \\times n^2 + 777 \\times n + 8888</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">66</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">777</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8888</span></span></span></span></th></tr></thead><tbody><tr><td style="text-align:center;">时间复杂度</td><td style="text-align:center;">O(1)</td><td style="text-align:center;">O(n)</td><td style="text-align:center;">O(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>)</td></tr></tbody></table><h2 id="〽️-总结" tabindex="-1"><a class="header-anchor" href="#〽️-总结"><span>〽️ 总结</span></a></h2><p>时间复杂度表示总结，</p><ul><li><p>T(n) = 常数，时间复杂度为O(1)</p></li><li><p>T(n) ≠ 常数，时间复杂度为O(保留T(n)的最高次项并且去掉最高次项前面的常数系数)</p></li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)&lt;O(logn)&lt;O(n)&lt;O(n^2)&lt;O(n^3)&lt;O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>常数阶&lt;对数阶&lt;线性阶&lt;平方阶&lt;立方阶&lt;指数阶</p><p>简单讲解一下对数：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>n</mi><mo>→</mo><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><msup><mn>2</mn><mi>n</mi></msup></msub><mo>→</mo><mtext>时间复杂度表示为O(logn)</mtext></mrow><annotation encoding="application/x-tex">2^{T(n)}=n \\rightarrow T(n)=\\log_{2^n}\\rightarrow \\text{时间复杂度表示为O(logn)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord cjk_fallback">时间复杂度表示为</span><span class="mord">O(logn)</span></span></span></span></span></p><p>直观的图形对比：</p><p>![图片.png](index.assets/图片1.png =200x)</p><p>![图片.png](index.assets/图片2.png =200x)</p><p>![图片.png](index.assets/图片3.png =200x)</p><h2 id="〽️-练习计算时间复杂度" tabindex="-1"><a class="header-anchor" href="#〽️-练习计算时间复杂度"><span>〽️ 练习计算时间复杂度</span></a></h2>`,36)),r(i,{data:[{id:"案例1"},{id:"案例2"},{id:"案例3"},{id:"案例4"},{id:"案例5"},{id:"案例6"},{id:"案例7"}]},{title0:t(({value:e,isActive:p})=>[...a[0]||(a[0]=[n("案例1",-1)])]),title1:t(({value:e,isActive:p})=>[...a[1]||(a[1]=[n("案例2",-1)])]),title2:t(({value:e,isActive:p})=>[...a[2]||(a[2]=[n("案例3",-1)])]),title3:t(({value:e,isActive:p})=>[...a[3]||(a[3]=[n("案例4",-1)])]),title4:t(({value:e,isActive:p})=>[...a[4]||(a[4]=[n("案例5",-1)])]),title5:t(({value:e,isActive:p})=>[...a[5]||(a[5]=[n("案例6",-1)])]),title6:t(({value:e,isActive:p})=>[...a[6]||(a[6]=[n("案例7",-1)])]),tab0:t(({value:e,isActive:p})=>[...a[7]||(a[7]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"拿下CSP-J，冲冲冲！\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"先过初赛，冲冲冲！\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"再过复赛，冲冲冲！\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"拿奖，冲冲冲！\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:t(({value:e,isActive:p})=>[...a[8]||(a[8]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},'//scanf("%d", &n);')]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" n"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"当前数字为：%d\\n"'),s("span",{class:"token punctuation"},","),n(" i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:t(({value:e,isActive:p})=>[...a[9]||(a[9]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" n"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" j "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" j "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" j"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"循环测试..."'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab3:t(({value:e,isActive:p})=>[...a[10]||(a[10]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"scanf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"%d"'),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token operator"},"&"),n("n"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"当前数字为：%d\\n"'),s("span",{class:"token punctuation"},","),n(" i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" j "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" j "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" j"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"循环测试...\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab4:t(({value:e,isActive:p})=>[...a[11]||(a[11]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"scanf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"%d"'),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token operator"},"&"),n("n"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"if"),s("span",{class:"token punctuation"},"("),n("n "),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"当前数字为：%d\\n"'),s("span",{class:"token punctuation"},","),n(" i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" j "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" j "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" j"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("                "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"循环测试...\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("            "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab5:t(({value:e,isActive:p})=>[...a[12]||(a[12]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" n"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" j "),s("span",{class:"token operator"},"="),n(" i"),s("span",{class:"token punctuation"},";"),n(" j "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" j"),s("span",{class:"token operator"},"++"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"循环测试..."'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab6:t(({value:e,isActive:p})=>[...a[13]||(a[13]=[s("div",{class:"language-c line-numbers-mode","data-highlighter":"prismjs","data-ext":"c"},[s("pre",null,[s("code",{class:"language-c"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[n("using namespace std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" n "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"scanf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"%d"'),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token operator"},"&"),n("n"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"for"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"<"),n(" n"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"*="),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"当前数字为：%d\\n"'),s("span",{class:"token punctuation"},","),n(" i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[15]||(a[15]=l(`<h2 id="〽️-随堂编程练习" tabindex="-1"><a class="header-anchor" href="#〽️-随堂编程练习"><span>〽️ 随堂编程练习</span></a></h2><h3 id="🎈-拍手次数" tabindex="-1"><a class="header-anchor" href="#🎈-拍手次数"><span>🎈 拍手次数</span></a></h3><p>【题目描述】</p><p>初中某班学生排成一列做游戏，从1开始报数，约定好数字 K ，报到 K 的倍数的学生需要拍一下手，那么从头报到尾需要拍手多少次？</p><p>【输入格式】</p><p>一行两个整数 n，K（1≤n，K≤2x10^9），分别表示学生人数 n 和数字 K</p><p>90%的数据，1≤n，K≤10^6</p><p>100%的数据，1≤n，K≤2x10^9</p><p>【输出格式】</p><p>一行一个整数，表示拍手次数。</p><p>【样例输入】</p><p>10 2</p><p>【样例输出】</p><p>5</p><div class="language-C++ line-numbers-mode" data-highlighter="prismjs" data-ext="C++"><pre><code class="language-C++"><span class="line">#include&lt;bits/stdc++.h&gt;</span>
<span class="line">using namespace std;</span>
<span class="line">int main(){</span>
<span class="line">	int n, k;</span>
<span class="line">	int count = 0;</span>
<span class="line">	cin &gt;&gt; n &gt;&gt; k; </span>
<span class="line">	for(int i = 1; i &lt;= n; i++){</span>
<span class="line">		if(i % k == 0){</span>
<span class="line">			count++;</span>
<span class="line">		}</span>
<span class="line">	}	</span>
<span class="line">	cout &lt;&lt; count;</span>
<span class="line">    //优化，时间复杂度O(1)</span>
<span class="line">	//cout &lt;&lt; n / k;</span>
<span class="line">	return 0;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🎈-弹球高度计算" tabindex="-1"><a class="header-anchor" href="#🎈-弹球高度计算"><span>🎈 弹球高度计算</span></a></h3><p>【题目描述】</p><p>一个弹球从某一个高度 h 落下，每次落地反弹的高度是原来高度的一半。现在请问，弹球在第10次落地时，总共经过多少距离？第10次反弹多高？</p><p>【输入格式】</p><p>一行一个整数 h（1≤h≤100），h 表示弹球第一次的高度</p><p>【输出格式】</p><p>输出包含两行：</p><p>第1行：到球第10次落地，经过的距离</p><p>第2行：第10次反弹的高度</p><p>【样例输入】</p><p>18</p><p>【样例输出】</p><p>53.9297</p><p>0.0175781</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line">using namespace std<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">double</span> h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">double</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	cin <span class="token operator">&gt;&gt;</span> h<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">		total <span class="token operator">+=</span> h<span class="token punctuation">;</span></span>
<span class="line">		h <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">		total <span class="token operator">+=</span> h<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	total <span class="token operator">-=</span> h<span class="token punctuation">;</span></span>
<span class="line">	cout <span class="token operator">&lt;&lt;</span> total <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">	cout <span class="token operator">&lt;&lt;</span> h<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-5-课后习题" tabindex="-1"><a class="header-anchor" href="#_1-5-课后习题"><span>1.5 课后习题</span></a></h2><h3 id="_1-5-1-座位数量" tabindex="-1"><a class="header-anchor" href="#_1-5-1-座位数量"><span>1.5.1 座位数量</span></a></h3><p>【题目描述】</p><p>某初中三年二班共54个座位，现在已知第一排有2个座位，每排比前一排多1个座位。请问最后一排几个座位，共有几排？</p><p>【输入格式】</p><p>无。</p><p>【输出格式】</p><p>输出包含两行：</p><p>第1行：最后一排座位数</p><p>第2行：共有多少排</p><p>【样例输入】</p><p>无。</p><p>【样例输出】</p><p>10</p><p>9</p><div class="language-C++ line-numbers-mode" data-highlighter="prismjs" data-ext="C++"><pre><code class="language-C++"><span class="line">#include&lt;bits/stdc++.h&gt;</span>
<span class="line">using namespace std;</span>
<span class="line">int main(){</span>
<span class="line">	int count = 0;</span>
<span class="line">	int sum = 54;</span>
<span class="line">	int seat = 2;</span>
<span class="line">	while(sum &gt; 0){</span>
<span class="line">		if(sum - seat &gt; 0){</span>
<span class="line">			count++;</span>
<span class="line">			sum -= seat;</span>
<span class="line">			seat += 1;</span>
<span class="line">		}</span>
<span class="line">		else if(sum - seat == 0){</span>
<span class="line">			count++;</span>
<span class="line">			break;</span>
<span class="line">		}</span>
<span class="line">		else{</span>
<span class="line">			count++;</span>
<span class="line">			seat = sum;</span>
<span class="line">			break;</span>
<span class="line">		}</span>
<span class="line">	}</span>
<span class="line">	cout &lt;&lt; seat &lt;&lt; endl;</span>
<span class="line">	cout &lt;&lt; count &lt;&lt; endl;</span>
<span class="line">	return 0;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-2-猴子爬树" tabindex="-1"><a class="header-anchor" href="#_1-5-2-猴子爬树"><span>1.5.2 猴子爬树</span></a></h3><p>【题目描述】</p><p>一颗香蕉树高17米，一只猴子从树底向上爬，每分钟爬3米，每爬一分钟需要休息一分钟，休息的时候，猴子会向下滑1米。请问小猴爬到树顶要多少分钟？</p><p>【输入格式】</p><p>无。</p><p>【输出格式】</p><p>输出一个整数，爬到树顶的时间。</p><p>【样例输入】</p><p>无。</p><p>【样例输出】</p><p>15</p><div class="language-C++ line-numbers-mode" data-highlighter="prismjs" data-ext="C++"><pre><code class="language-C++"><span class="line">#include&lt;bits/stdc++.h&gt;</span>
<span class="line">using namespace std;</span>
<span class="line">int main(){</span>
<span class="line">	int dis = 0;</span>
<span class="line">	int time = 0;</span>
<span class="line">	while(true){</span>
<span class="line">		dis += 3;</span>
<span class="line">		time++;</span>
<span class="line">		if(dis &gt;= 17){</span>
<span class="line">			break;</span>
<span class="line">		}</span>
<span class="line">		time++;</span>
<span class="line">		dis--;</span>
<span class="line">	}</span>
<span class="line">	cout &lt;&lt; time;</span>
<span class="line">	return 0;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-3-鸡兔同笼" tabindex="-1"><a class="header-anchor" href="#_1-5-3-鸡兔同笼"><span>1.5.3 鸡兔同笼</span></a></h3><p>【题目描述】</p><p>鸡和兔子关在同一个笼子里，共有35个头，94只脚，请问鸡有多少只，兔子有多少只？</p><p>【输入格式】</p><p>无。</p><p>【输出格式】</p><p>输出包含两行：</p><p>第1行：鸡多少只</p><p>第2行：兔子多少只</p><p>【样例输入】</p><p>无。</p><p>【样例输出】</p><p>23</p><p>12</p><div class="language-C++ line-numbers-mode" data-highlighter="prismjs" data-ext="C++"><pre><code class="language-C++"><span class="line">#include&lt;bits/stdc++.h&gt;</span>
<span class="line">using namespace std;</span>
<span class="line">int main(){</span>
<span class="line">	int chiken = 0;</span>
<span class="line">	int rabbit = 0;</span>
<span class="line">	for(chiken = 0; chiken &lt;= 35; chiken++){</span>
<span class="line">		for(rabbit = 0; rabbit &lt;= 35; rabbit++){</span>
<span class="line">			if((chiken + rabbit) == 35 &amp;&amp; (2 * chiken + 4 * rabbit) == 94){</span>
<span class="line">				cout &lt;&lt; chiken &lt;&lt; endl;</span>
<span class="line">				cout &lt;&lt; rabbit&lt;&lt; endl;</span>
<span class="line">			}</span>
<span class="line">		}</span>
<span class="line">	}</span>
<span class="line">	return 0;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,73))])}const b=c(d,[["render",k]]),y=JSON.parse('{"path":"/docs/csp/csp_level3/csp_01_time/","title":"时间复杂度分析","lang":"zh-CN","frontmatter":{"feed":false,"seo":false,"head":[]},"git":{"createdTime":1703402936000,"updatedTime":1704437042000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":2,"url":"https://github.com/Tivonfeng"}]},"readingTime":{"minutes":7.03,"words":2109},"filePathRelative":"docs/csp/csp_level3/csp_01_time/index.md"}');export{b as comp,y as data};
