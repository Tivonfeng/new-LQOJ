import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,d as p,a as k,e as o,w as e,r as i,o as v,b as s,f as n}from"./app-CeA3Z9s4.js";const m={};function b(g,a){const r=i("Tabs"),c=i("CodeTabs");return v(),d("div",null,[a[14]||(a[14]=p('<h1 id="第4章-c-的输入cin-🎤" tabindex="-1"><a class="header-anchor" href="#第4章-c-的输入cin-🎤"><span>第4章：C++的输入cin 🎤</span></a></h1><h2 id="🗺️-学习地图" tabindex="-1"><a class="header-anchor" href="#🗺️-学习地图"><span>🗺️ 学习地图</span></a></h2><p><strong>【你的学习进度】</strong><br> ✅ 第1章：初识C++<br> ✅ 第2章：C++的输出cout<br> ✅ 第3章：C++的变量<br> 👉 第4章：C++的输入cin【你在这里】<br> ⬜ 第5章：基本数据类型<br> ⬜ 后续章节...</p><h2 id="🗣️-与用户对话" tabindex="-1"><a class="header-anchor" href="#🗣️-与用户对话"><span>🗣️ 与用户对话</span></a></h2><p><strong>【故事开始】</strong> 小明设计了一个简单的数学游戏，但他发现游戏一直都是固定的问题和答案，太无聊了！他想让玩家能够输入自己的数字进行计算，或者输入自己的名字让游戏更有个性化。老师告诉他需要学习&quot;cin&quot;——计算机的&quot;耳朵&quot;。让我们和小明一起学习如何让程序&quot;听取&quot;用户的输入！</p><div style="text-align:center;"><p>到目前为止，我们的程序只能向用户展示信息，但还不能接收用户的输入。这就像是一个只会自言自语的机器人，不是很有趣，对吧？</p></div>',6)),k(` 图片暂时注释掉，等有图片资源再添加 
![cout是计算机的嘴巴，cin是计算机的耳朵](/assets/images/cin-cout.png) 
`),a[15]||(a[15]=p(`<p>在这一章中，我们将学习如何使用==<code>cin</code>==（发音为&quot;C in&quot;）来获取用户的输入，这样我们的程序就可以与用户进行真正的互动了！</p><div class="hint-container tip"><p class="hint-container-title">快速检查</p><p><code>cin</code>的主要作用是什么？</p><ul><li>A. 向屏幕输出信息</li><li>B. 从用户那里获取输入</li><li>C. 存储数据到文件</li><li>D. 执行数学计算</li></ul><p>(思考一下再看答案...答案是<mark>B</mark>)</p></div><h2 id="📥-基本输入" tabindex="-1"><a class="header-anchor" href="#📥-基本输入"><span>📥 基本输入</span></a></h2><p><code>cin</code>是C++中用于接收用户输入的工具，它的工作方式与<code>cout</code>相反。如果说<code>cout</code>是计算机的&quot;嘴巴&quot;，那么<code>cin</code>就是计算机的&quot;耳朵&quot;。</p><p>我们使用<code>&gt;&gt;</code>符号（称为提取运算符）从<code>cin</code>中获取输入：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你好，&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;！欢迎来到C++的世界！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>运行过程</summary><p>当你运行这个程序时：</p><ol><li>程序会显示&quot;请输入你的名字：&quot;</li><li>程序会等待你输入内容并按下回车键</li><li>你输入的内容会被存储在<code>name</code>变量中</li><li>程序会使用你输入的名字向你打招呼</li></ol></details><div class="hint-container note"><p class="hint-container-title">编程思维</p><p>输入过程的步骤：</p><ol><li>创建一个变量来存储用户的输入</li><li>提示用户输入内容（使用<code>cout</code>）</li><li>使用<code>cin</code>和<code>&gt;&gt;</code>从用户那里获取输入</li><li>将输入存储到变量中</li><li>使用这个变量进行后续操作</li></ol></div><div style="text-align:center;"><p><strong>【记忆助手】</strong> 记住<code>cin</code>和<code>cout</code>的方向： &quot;cin向内，箭头朝内 (&gt;&gt;)， cout向外，箭头朝外 (&lt;&lt;)， 方向指向数据流动的去向。&quot;</p></div><h2 id="🔢-输入不同类型的数据" tabindex="-1"><a class="header-anchor" href="#🔢-输入不同类型的数据"><span>🔢 输入不同类型的数据</span></a></h2><p><code>cin</code>可以接收各种类型的数据，C++会自动将输入转换为正确的类型：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">double</span> height<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">char</span> favoriteSubject<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的身高（米）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> height<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你最喜欢的科目的首字母（如M代表数学）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> favoriteSubject<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n===== 你的个人信息 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;姓名：&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;年龄：&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;岁&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;身高：&quot;</span> <span class="token operator">&lt;&lt;</span> height <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;米&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;最喜欢的科目首字母：&quot;</span> <span class="token operator">&lt;&lt;</span> favoriteSubject <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)),o(r,{data:[{id:"整数输入"},{id:"小数输入"},{id:"字符和字符串输入"}],active:2,"tab-id":"input-types"},{title0:e(({value:t,isActive:l})=>[...a[0]||(a[0]=[n("整数输入",-1)])]),title1:e(({value:t,isActive:l})=>[...a[1]||(a[1]=[n("小数输入",-1)])]),title2:e(({value:t,isActive:l})=>[...a[2]||(a[2]=[n("字符和字符串输入",-1)])]),tab0:e(({value:t,isActive:l})=>[...a[3]||(a[3]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" birthYear"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的年龄："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的出生年份："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" birthYear"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你今年"'),n(),s("span",{class:"token operator"},"<<"),n(" age "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"岁，出生于"'),n(),s("span",{class:"token operator"},"<<"),n(" birthYear "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"年。"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"再过"'),n(),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token number"},"18"),n(),s("span",{class:"token operator"},"-"),n(" age "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"年，你就满18岁了！"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:t,isActive:l})=>[...a[4]||(a[4]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" height"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" weight"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的身高（米）："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" height"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的体重（千克）："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" weight"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 计算BMI（体重指数）")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"double"),n(" bmi "),s("span",{class:"token operator"},"="),n(" weight "),s("span",{class:"token operator"},"/"),n(),s("span",{class:"token punctuation"},"("),n("height "),s("span",{class:"token operator"},"*"),n(" height"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你的身高是"'),n(),s("span",{class:"token operator"},"<<"),n(" height "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"米，体重是"'),n(),s("span",{class:"token operator"},"<<"),n(" weight "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"千克。"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你的BMI指数是"'),n(),s("span",{class:"token operator"},"<<"),n(" bmi "),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab2:e(({value:t,isActive:l})=>[...a[5]||(a[5]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    string name"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"char"),n(" gender"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的名字："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" name"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的性别（M/F）："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" gender"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你好，"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("gender "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token char"},"'M'"),n(),s("span",{class:"token operator"},"||"),n(" gender "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token char"},"'m'"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"男同学"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("gender "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token char"},"'F'"),n(),s("span",{class:"token operator"},"||"),n(" gender "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token char"},"'f'"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"女同学"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"同学"'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'" "'),n(),s("span",{class:"token operator"},"<<"),n(" name "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"！"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[16]||(a[16]=p(`<div class="hint-container warning"><p class="hint-container-title">常见错误</p><ol><li><p>数据类型不匹配 问题：当你期望输入一个数字，但用户输入了文字</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span>  <span class="token comment">// 如果用户输入&quot;十二&quot;而不是&quot;12&quot;，程序可能会出错</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>忘记提示用户 ❌ <code>cin &gt;&gt; name;</code> // 用户不知道该输入什么 ✅ <code>cout &lt;&lt; &quot;请输入姓名：&quot;; cin &gt;&gt; name;</code> // 清晰地提示用户</p></li></ol></div><div class="hint-container info"><p class="hint-container-title">真实场景</p><p>学校注册系统就是使用类似的输入方式工作的！当新生入学时，系统会要求输入姓名、年龄、班级等信息，然后存储这些数据并生成学生档案。通过这种方式，同一个程序可以处理不同学生的信息，而不需要为每个学生编写单独的代码。</p></div><h2 id="🔄-连续输入多个值" tabindex="-1"><a class="header-anchor" href="#🔄-连续输入多个值"><span>🔄 连续输入多个值</span></a></h2><p>你可以在一行中输入多个值，用空格分隔：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> num1<span class="token punctuation">,</span> num2<span class="token punctuation">,</span> num3<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入三个整数，用空格分隔：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> num1 <span class="token operator">&gt;&gt;</span> num2 <span class="token operator">&gt;&gt;</span> num3<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">int</span> sum <span class="token operator">=</span> num1 <span class="token operator">+</span> num2 <span class="token operator">+</span> num3<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">double</span> average <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">3.0</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;这三个数的总和是：&quot;</span> <span class="token operator">&lt;&lt;</span> sum <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;这三个数的平均值是：&quot;</span> <span class="token operator">&lt;&lt;</span> average <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>示例输入和输出</summary><p>输入：<code>10 20 30</code> 输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">这三个数的总和是：60</span>
<span class="line">这三个数的平均值是：20</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>程序会将10存储在<code>num1</code>中，20存储在<code>num2</code>中，30存储在<code>num3</code>中。</p></details><div style="text-align:right;"><p><strong>【数学连接】</strong> 计算多个数的平均值是数学中的常见操作。在C++中，我们可以轻松地实现这一点：先计算总和，然后除以数字的个数。注意这里使用了<code>3.0</code>而不是<code>3</code>进行除法，是为了得到小数结果而不是整数结果。</p></div><div class="hint-container tip"><p class="hint-container-title">快速检查</p><p>以下代码会输出什么？</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入两个整数：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">+</span> b <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果用户输入&quot;5 7&quot;，输出将是：</p><ul><li>A. 5 7</li><li>B. 12</li><li>C. 57</li><li>D. 错误</li></ul><p>(思考一下再看答案...答案是<mark>B</mark>，因为程序会计算5+7=12)</p></div><h2 id="📝-输入包含空格的文本" tabindex="-1"><a class="header-anchor" href="#📝-输入包含空格的文本"><span>📝 输入包含空格的文本</span></a></h2><p>使用普通的<code>cin &gt;&gt;</code>无法正确读取包含空格的文本，因为空格会被视为分隔符。如果你想输入完整的句子，可以使用==<code>getline()</code>==函数：</p>`,10)),o(c,{data:[{id:"使用cin（不能读取空格）"},{id:"使用getline（可以读取空格）"}],"tab-id":"input-text"},{title0:e(({value:t,isActive:l})=>[...a[6]||(a[6]=[n("使用cin（不能读取空格）",-1)])]),title1:e(({value:t,isActive:l})=>[...a[7]||(a[7]=[n("使用getline（可以读取空格）",-1)])]),tab0:e(({value:t,isActive:l})=>[...a[8]||(a[8]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    string name"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的全名："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" name"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 只能读取到第一个空格前的内容")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你好，"'),n(),s("span",{class:"token operator"},"<<"),n(" name "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"！"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:t,isActive:l})=>[...a[9]||(a[9]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    string fullName"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    string favoriteMovie"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的全名："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"getline"),s("span",{class:"token punctuation"},"("),n("cin"),s("span",{class:"token punctuation"},","),n(" fullName"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你最喜欢的电影："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token function"},"getline"),s("span",{class:"token punctuation"},"("),n("cin"),s("span",{class:"token punctuation"},","),n(" favoriteMovie"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"\\n"'),n(),s("span",{class:"token operator"},"<<"),n(" fullName "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"，你最喜欢的电影是《"'),n(),s("span",{class:"token operator"},"<<"),n(" favoriteMovie "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"》，真是个不错的选择！"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[17]||(a[17]=p(`<details class="hint-container details"><summary>比较说明</summary><p><code>cin &gt;&gt;</code> vs <code>getline(cin, ...)</code>：</p><ul><li><code>cin &gt;&gt;</code> 读取到空格或回车为止</li><li><code>getline()</code> 读取整行文本，包括空格</li></ul></details><div class="hint-container info"><p class="hint-container-title">生活类比</p><p>想象你在填写一份表格：</p><ul><li>使用<code>cin &gt;&gt;</code>就像在表格的每个框中只能写一个单词</li><li>使用<code>getline()</code>就像有一整行可以自由书写</li></ul></div><h2 id="⚠️-混合使用cin和getline的注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-混合使用cin和getline的注意事项"><span>⚠️ 混合使用cin和getline的注意事项</span></a></h2><p>如果你在同一个程序中混合使用<code>cin &gt;&gt;</code>和<code>getline()</code>，可能会遇到一些问题。这是因为<code>cin &gt;&gt;</code>在读取输入后，会将回车键留在输入缓冲区中，而<code>getline()</code>会读取这个回车并认为已经读取了一行。</p><div class="hint-container important"><p class="hint-container-title">解决方法</p><p>在<code>cin &gt;&gt;</code>和<code>getline()</code>之间添加<code>cin.ignore()</code>来清除输入缓冲区中的回车：</p></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">    string description<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 清除输入缓冲区中的回车</span></span>
<span class="line">    cin<span class="token punctuation">.</span><span class="token function">ignore</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请描述一下你自己：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> description<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你今年&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;岁。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;关于你自己：&quot;</span> <span class="token operator">&lt;&lt;</span> description <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">生活类比</p><p>这就像你在超市结账时：</p><ul><li><code>cin &gt;&gt;</code>扫描了你的商品但没处理收据</li><li><code>cin.ignore()</code>把收据清理掉</li><li>然后<code>getline()</code>才能开始处理下一个顾客的商品</li></ul></div><div class="hint-container warning"><p class="hint-container-title">常见错误</p><p>混合使用<code>cin &gt;&gt;</code>和<code>getline()</code>但忘记使用<code>cin.ignore()</code>：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> score<span class="token punctuation">;</span></span>
<span class="line">string comment<span class="token punctuation">;</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入分数：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">cin <span class="token operator">&gt;&gt;</span> score<span class="token punctuation">;</span></span>
<span class="line">cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入评语：&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> comment<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 可能会直接跳过这一步！</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解决方案</strong>：在<code>cin</code>和<code>getline</code>之间添加<code>cin.ignore(10000, &#39;\\n&#39;);</code></p></div><h2 id="🔍-输入验证" tabindex="-1"><a class="header-anchor" href="#🔍-输入验证"><span>🔍 输入验证</span></a></h2><p>在实际应用中，用户可能会输入错误的数据。例如，当你要求输入年龄时，用户可能会输入负数或非数字字符。为了使程序更加健壮，我们需要验证用户的输入：</p>`,10)),o(c,{data:[{id:"简单验证"},{id:"循环验证"}],"tab-id":"input-validation"},{title0:e(({value:t,isActive:l})=>[...a[10]||(a[10]=[n("简单验证",-1)])]),title1:e(({value:t,isActive:l})=>[...a[11]||(a[11]=[n("循环验证",-1)])]),tab0:e(({value:t,isActive:l})=>[...a[12]||(a[12]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的年龄（0-120岁）："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    cin "),s("span",{class:"token operator"},">>"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 验证年龄是否在合理范围内")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("age "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),n(),s("span",{class:"token operator"},"||"),n(" age "),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"120"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"输入的年龄不合理！"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你的年龄是"'),n(),s("span",{class:"token operator"},"<<"),n(" age "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"岁。"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:t,isActive:l})=>[...a[13]||(a[13]=[s("div",{class:"language-cpp line-numbers-mode","data-highlighter":"prismjs","data-ext":"cpp"},[s("pre",null,[s("code",{class:"language-cpp"},[s("span",{class:"line"},[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),n(),s("span",{class:"token string"},"<bits/stdc++.h>")])]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"using"),n(),s("span",{class:"token keyword"},"namespace"),n(" std"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"int"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"bool"),n(" validInput "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"// 循环直到获得有效输入")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token operator"},"!"),n("validInput"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("        cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"请输入你的年龄（0-120岁）："'),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        cin "),s("span",{class:"token operator"},">>"),n(" age"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"        "),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cin"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"fail"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"||"),n(" age "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),n(),s("span",{class:"token operator"},"||"),n(" age "),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"120"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"输入无效，请重新输入一个0到120之间的整数。"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("            cin"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"clear"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 清除错误状态")]),n(`
`),s("span",{class:"line"},[n("            cin"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"ignore"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"10000"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token char"},"'\\n'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 清除输入缓冲区")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("            validInput "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"// 输入有效，退出循环")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    cout "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"你的年龄是"'),n(),s("span",{class:"token operator"},"<<"),n(" age "),s("span",{class:"token operator"},"<<"),n(),s("span",{class:"token string"},'"岁。"'),n(),s("span",{class:"token operator"},"<<"),n(" endl"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"    "),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[18]||(a[18]=p(`<div class="hint-container important"><p class="hint-container-title">输入验证的重要性</p><p>在实际应用程序中，输入验证是非常重要的。它可以：</p><ol><li>防止程序因无效输入而崩溃</li><li>确保数据的准确性和有效性</li><li>提高用户体验，及时给予用户反馈</li></ol></div><h2 id="🧮-使用输入创建简单计算器" tabindex="-1"><a class="header-anchor" href="#🧮-使用输入创建简单计算器"><span>🧮 使用输入创建简单计算器</span></a></h2><p>现在，让我们结合所学的知识，创建一个简单的计算器程序：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">double</span> num1<span class="token punctuation">,</span> num2<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">char</span> operation<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== 简易计算器 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入第一个数：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> num1<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入运算符（+、-、*、/）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> operation<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入第二个数：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> num2<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 根据运算符执行相应的计算</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>operation<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token char">&#39;+&#39;</span><span class="token operator">:</span></span>
<span class="line">            cout <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; + &quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; = &quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">+</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token char">&#39;-&#39;</span><span class="token operator">:</span></span>
<span class="line">            cout <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; = &quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">-</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token char">&#39;*&#39;</span><span class="token operator">:</span></span>
<span class="line">            cout <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; * &quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; = &quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">*</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token char">&#39;/&#39;</span><span class="token operator">:</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>num2 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                cout <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; / &quot;</span> <span class="token operator">&lt;&lt;</span> num2 <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; = &quot;</span> <span class="token operator">&lt;&lt;</span> num1 <span class="token operator">/</span> num2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;错误：除数不能为零！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">            cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;错误：无效的运算符！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>示例运行</summary><p>输入：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">请输入第一个数：10</span>
<span class="line">请输入运算符（+、-、*、/）：*</span>
<span class="line">请输入第二个数：5</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">10 * 5 = 50</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><div class="hint-container note"><p class="hint-container-title">程序分析</p><p>这个计算器程序展示了如何：</p><ol><li>使用<code>cin</code>获取用户输入的数字和运算符</li><li>使用条件语句（switch-case）根据不同的运算符执行不同的操作</li><li>处理特殊情况（如除以零）</li><li>将计算结果输出给用户</li></ol></div><h2 id="🎮-动手实践" tabindex="-1"><a class="header-anchor" href="#🎮-动手实践"><span>🎮 动手实践</span></a></h2><p>编程最好的学习方式就是动手做！试试下面的小任务：</p><details class="hint-container details"><summary>基础练习 🌟</summary><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 创建一个程序，询问用户的姓名和年龄，然后计算并显示他们出生的大致年份</label></li></ul><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> currentYear <span class="token operator">=</span> <span class="token number">2023</span><span class="token punctuation">;</span>  <span class="token comment">// 当前年份</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的姓名：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">int</span> birthYear <span class="token operator">=</span> currentYear <span class="token operator">-</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你好，&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你大约出生于&quot;</span> <span class="token operator">&lt;&lt;</span> birthYear <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;年。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>进阶练习 🌟🌟</summary><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 编写一个BMI计算器，询问用户的身高（米）和体重（千克），然后计算并显示他们的BMI指数（体重/身高²）</label></li></ul><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">double</span> height<span class="token punctuation">,</span> weight<span class="token punctuation">,</span> bmi<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== BMI计算器 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的身高（米）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> height<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的体重（千克）：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> weight<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 计算BMI</span></span>
<span class="line">    bmi <span class="token operator">=</span> weight <span class="token operator">/</span> <span class="token punctuation">(</span>height <span class="token operator">*</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你的BMI指数是：&quot;</span> <span class="token operator">&lt;&lt;</span> bmi <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 显示BMI分类</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;BMI分类：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>bmi <span class="token operator">&lt;</span> <span class="token number">18.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;体重过轻&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bmi <span class="token operator">&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;正常范围&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bmi <span class="token operator">&lt;</span> <span class="token number">28</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;超重&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;肥胖&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>挑战练习 🌟🌟🌟</summary><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 创建一个简单的问答游戏，询问用户至少3个问题，并根据他们的回答给出不同的反馈</label></li></ul><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    string answer<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== C++小测验 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n你好，&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;！准备好测试你的C++知识了吗？\\n&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 问题1</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;问题1：C++中用于输出的语句是什么？&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A. cin   B. cout   C. print   D. output&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你的答案：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> answer<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>answer <span class="token operator">==</span> <span class="token string">&quot;B&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;cout&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;正确！+1分&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">        score<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;错误！正确答案是B. cout&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 问题2</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n问题2：C++中整数类型的关键字是什么？&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A. integer   B. num   C. int   D. float&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你的答案：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> answer<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>answer <span class="token operator">==</span> <span class="token string">&quot;C&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;int&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;正确！+1分&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">        score<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;错误！正确答案是C. int&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 问题3</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n问题3：C++中用于获取用户输入的语句是什么？&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;A. cin   B. cout   C. input   D. scanf&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你的答案：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> answer<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>answer <span class="token operator">==</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">||</span> answer <span class="token operator">==</span> <span class="token string">&quot;cin&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;正确！+1分&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">        score<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;错误！正确答案是A. cin&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 显示最终得分</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n===== 测验结束 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;你的得分：&quot;</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;/3&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 根据得分给出反馈</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;太棒了！你是C++大师！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;不错！再接再厉！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;继续努力，你可以做得更好！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;别灰心，多练习就会进步！&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="🧠-思考题" tabindex="-1"><a class="header-anchor" href="#🧠-思考题"><span>🧠 思考题</span></a></h2><div class="hint-container info"><p class="hint-container-title">思考以下问题</p><ol><li><code>cin &gt;&gt;</code>和<code>getline()</code>有什么区别？在什么情况下应该使用<code>getline()</code>而不是<code>cin &gt;&gt;</code>？</li><li>为什么在混合使用<code>cin &gt;&gt;</code>和<code>getline()</code>时需要使用<code>cin.ignore()</code>？</li><li>如何验证用户输入的数据是否有效？例如，如何确保用户输入的是一个正整数？</li></ol></div><h2 id="🎯-挑战任务" tabindex="-1"><a class="header-anchor" href="#🎯-挑战任务"><span>🎯 挑战任务</span></a></h2><div class="hint-container warning"><p class="hint-container-title">迷你项目：个性化故事生成器</p><p>创建一个程序，询问用户一些信息（如姓名、年龄、喜欢的颜色、动物等），然后使用这些信息生成一个个性化的短故事。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bits/stdc++.h&gt;</span></span></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    string name<span class="token punctuation">,</span> color<span class="token punctuation">,</span> animal<span class="token punctuation">,</span> place<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;===== 个性化故事生成器 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> age<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你喜欢的颜色：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> color<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你喜欢的动物：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    cin <span class="token operator">&gt;&gt;</span> animal<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cin<span class="token punctuation">.</span><span class="token function">ignore</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 清除输入缓冲区</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入你梦想去的地方：&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> place<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n===== 你的个性化故事 =====&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;从前，有一个&quot;</span> <span class="token operator">&lt;&lt;</span> age <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;岁的孩子，名叫&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;最喜欢的颜色是&quot;</span> <span class="token operator">&lt;&lt;</span> color <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;，每天都穿着&quot;</span> <span class="token operator">&lt;&lt;</span> color <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;色的衣服。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;有一天，&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;在花园里发现了一只神奇的&quot;</span> <span class="token operator">&lt;&lt;</span> animal <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;这只&quot;</span> <span class="token operator">&lt;&lt;</span> animal <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;会说话，它告诉&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;它可以带&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;去任何地方。&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;毫不犹豫地说：\\&quot;我想去&quot;</span> <span class="token operator">&lt;&lt;</span> place <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;！\\&quot;&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;于是，&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;和&quot;</span> <span class="token operator">&lt;&lt;</span> animal <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;一起踏上了前往&quot;</span> <span class="token operator">&lt;&lt;</span> place <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;的奇妙旅程...&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：记得在使用<code>getline()</code>之前清除输入缓冲区，特别是在之前使用了<code>cin &gt;&gt;</code>的情况下。</p></div><h2 id="📚-本章小结" tabindex="-1"><a class="header-anchor" href="#📚-本章小结"><span>📚 本章小结</span></a></h2><div style="text-align:center;"><p>恭喜你完成了第四章的学习！现在你已经：</p></div><ul><li>🌟 学会了使用==<code>cin</code>==从用户那里获取输入</li><li>🌟 了解了如何输入不同类型的数据</li><li>🌟 掌握了连续输入多个值的方法</li><li>🌟 学会了使用==<code>getline()</code>==读取包含空格的文本</li><li>🌟 理解了混合使用<code>cin</code>和<code>getline</code>时的注意事项</li><li>🌟 学会了如何验证用户输入的有效性</li></ul><div class="hint-container note"><p class="hint-container-title">下章预告</p><p>在下一章中，我们将深入学习C++的基本数据类型，了解它们的范围、精度和适用场景。这将帮助你更好地选择合适的数据类型来存储不同的信息。准备好继续你的编程冒险了吗？</p></div>`,19))])}const y=u(m,[["render",b]]),w=JSON.parse('{"path":"/docs/csp/csp_level1/csp_04_CPP_Input_cin/","title":"第4章：C++的输入cin 🎤","lang":"zh-CN","frontmatter":{},"git":{"createdTime":1741319126000,"updatedTime":1742131209000,"contributors":[{"name":"Tivonfeng","username":"Tivonfeng","email":"tivonfeng@163.com","commits":3,"url":"https://github.com/Tivonfeng"}]},"readingTime":{"minutes":13.19,"words":3958},"filePathRelative":"docs/csp/csp_level1/csp_04_CPP_Input_cin/index.md","excerpt":"\\n<h2>🗺️ 学习地图</h2>\\n<p><strong>【你的学习进度】</strong><br>\\n✅ 第1章：初识C++<br>\\n✅ 第2章：C++的输出cout<br>\\n✅ 第3章：C++的变量<br>\\n👉 第4章：C++的输入cin【你在这里】<br>\\n⬜ 第5章：基本数据类型<br>\\n⬜ 后续章节...</p>\\n<h2>🗣️ 与用户对话</h2>\\n<p><strong>【故事开始】</strong>\\n小明设计了一个简单的数学游戏，但他发现游戏一直都是固定的问题和答案，太无聊了！他想让玩家能够输入自己的数字进行计算，或者输入自己的名字让游戏更有个性化。老师告诉他需要学习\\"cin\\"——计算机的\\"耳朵\\"。让我们和小明一起学习如何让程序\\"听取\\"用户的输入！</p>"}');export{y as comp,w as data};
